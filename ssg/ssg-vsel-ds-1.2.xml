<?xml version="1.0"?>
<ds:data-stream-collection xmlns:cat="urn:oasis:names:tc:entity:xmlns:xml:catalog" xmlns:cpe-dict="http://cpe.mitre.org/dictionary/2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:ds="http://scap.nist.gov/schema/scap/source/1.2" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:ind="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:linux="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" xmlns:ocil="http://scap.nist.gov/schema/ocil/2.0" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:xccdf-1.2="http://checklists.nist.gov/xccdf/1.2" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="scap_org.open-scap_collection_from_xccdf_ssg-vsel-xccdf-1.2.xml" schematron-version="1.2">
  <ds:data-stream id="scap_org.open-scap_datastream_from_xccdf_ssg-vsel-xccdf-1.2.xml" scap-version="1.2" use-case="OTHER">
    <ds:dictionaries>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-vsel-cpe-dictionary.xml" xlink:href="#scap_org.open-scap_comp_ssg-vsel-cpe-dictionary.xml">
        <cat:catalog>
          <cat:uri name="ssg-vsel-cpe-oval.xml" uri="#scap_org.open-scap_cref_ssg-vsel-cpe-oval.xml"/>
        </cat:catalog>
      </ds:component-ref>
    </ds:dictionaries>
    <ds:checklists>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-vsel-xccdf-1.2.xml" xlink:href="#scap_org.open-scap_comp_ssg-vsel-xccdf-1.2.xml">
        <cat:catalog>
          <cat:uri name="ssg-vsel-ocil.xml" uri="#scap_org.open-scap_cref_ssg-vsel-ocil.xml"/>
          <cat:uri name="ssg-vsel-oval.xml" uri="#scap_org.open-scap_cref_ssg-vsel-oval.xml"/>
        </cat:catalog>
      </ds:component-ref>
    </ds:checklists>
    <ds:checks>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-vsel-ocil.xml" xlink:href="#scap_org.open-scap_comp_ssg-vsel-ocil.xml"/>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-vsel-oval.xml" xlink:href="#scap_org.open-scap_comp_ssg-vsel-oval.xml"/>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-vsel-cpe-oval.xml" xlink:href="#scap_org.open-scap_comp_ssg-vsel-cpe-oval.xml"/>
    </ds:checks>
  </ds:data-stream>
  <ds:component id="scap_org.open-scap_comp_ssg-vsel-ocil.xml" timestamp="2021-07-29T13:19:05">
    <ocil:ocil>
      <ocil:generator>
        <ocil:product_name>xccdf-create-ocil.xslt from SCAP Security Guide</ocil:product_name>
        <ocil:product_version>ssg: 0.1.57</ocil:product_version>
        <ocil:schema_version>2.0</ocil:schema_version>
        <ocil:timestamp>2021-07-29T13:14:50Z</ocil:timestamp>
      </ocil:generator>
      <ocil:questionnaires>
        <ocil:questionnaire id="ocil:ssg-dats_auto_update_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x must be configured to receive automatic updates</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-dats_auto_update_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-dats_updated_ocil:questionnaire:1">
          <ocil:title>The anti-virus signature file age must not exceed 7 days</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-dats_updated_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-virus_notification_ocil:questionnaire:1">
          <ocil:title>A notification mechanism or process must be in place to notify Administrators of out of date DAT, detected malware and error codes</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-virus_notification_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-web_client_disabled_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux Web interface must be disabled unless the system is on a segregated network</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-web_client_disabled_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_action_app_primary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Clean as first action when a virus or Trojan is detected</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_action_app_primary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_action_app_secondary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Quarantine if first action fails when a virus or Trojan is detected</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_action_app_secondary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_action_default_primary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Clean as first action when programs and jokes are found</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_action_default_primary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_action_default_secondary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Quarantine if first action fails when programs and jokes are found</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_action_default_secondary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_action_error_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to deny access to the file if an error occurs during scanning</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_action_error_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_action_timeout_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to allow access to files if scanning times out</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_action_timeout_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_allFiles_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to scan all file types</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_allFiles_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_decompArchive_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to decompress archives when scanning</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_decompArchive_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_enabled_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x must be configured to enable On-Access scanning</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_enabled_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_exclusions_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must only be configured with exclusions that are documented and approved by the ISSO/ISSM/AO</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_exclusions_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_heuristicAnalysis_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to find unknown program viruses</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_heuristicAnalysis_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_macroAnalysis_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to find unknown macro viruses</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_macroAnalysis_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_program_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to find potentially unwanted programs</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_program_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_scanMaxTmo_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner maximum scan time must not be less than 45 seconds</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_scanMaxTmo_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_scanNWFiles_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be enabled to scan mounted volumes when mounted volumes point to a network server without an anti-virus solution installed</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_scanNWFiles_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_scanOnRead_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to scan files when being read from disk</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_scanOnRead_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-oas_scanOnWrite_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to scan files when being written to disk</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-oas_scanOnWrite_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_action_app_primary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Clean as first action when a virus or Trojan is detected</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_action_app_primary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_action_app_secondary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Quarantine if first action fails when a virus or Trojan is detected</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_action_app_secondary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_action_default_primary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Clean as first action when programs and jokes are found</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_action_default_primary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_action_default_secondary_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Quarantine if first action fails when programs and jokes are found</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_action_default_secondary_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_allFiles_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to scan all file types</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_allFiles_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_decompArchive_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to decompress archives when scanning</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_decompArchive_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_extensions_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to include all local drives and their sub-directories</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_extensions_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_heuristicAnalysis_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to find unknown program viruses</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_heuristicAnalysis_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_macroAnalysis_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to find unknown macro viruses</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_macroAnalysis_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_mime_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to decode MIME encoded files.</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_mime_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_program_ocil:questionnaire:1">
          <ocil:title>The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to find potentially unwanted programs</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_program_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
        <ocil:questionnaire id="ocil:ssg-ods_scanNWFiles_local_ocil:questionnaire:1">
          <ocil:title> The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be enabled to scan mounted volumes when mounted volumes point to a network server without an anti-virus solution installed</ocil:title>
          <ocil:actions>
            <ocil:test_action_ref>ocil:ssg-ods_scanNWFiles_local_action:testaction:1</ocil:test_action_ref>
          </ocil:actions>
        </ocil:questionnaire>
      </ocil:questionnaires>
      <ocil:test_actions>
        <ocil:boolean_question_test_action id="ocil:ssg-dats_auto_update_action:testaction:1" question_ref="ocil:ssg-dats_auto_update_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-dats_updated_action:testaction:1" question_ref="ocil:ssg-dats_updated_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-virus_notification_action:testaction:1" question_ref="ocil:ssg-virus_notification_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-web_client_disabled_action:testaction:1" question_ref="ocil:ssg-web_client_disabled_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_action_app_primary_action:testaction:1" question_ref="ocil:ssg-oas_action_app_primary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_action_app_secondary_action:testaction:1" question_ref="ocil:ssg-oas_action_app_secondary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_action_default_primary_action:testaction:1" question_ref="ocil:ssg-oas_action_default_primary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_action_default_secondary_action:testaction:1" question_ref="ocil:ssg-oas_action_default_secondary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_action_error_action:testaction:1" question_ref="ocil:ssg-oas_action_error_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_action_timeout_action:testaction:1" question_ref="ocil:ssg-oas_action_timeout_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_allFiles_action:testaction:1" question_ref="ocil:ssg-oas_allFiles_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_decompArchive_action:testaction:1" question_ref="ocil:ssg-oas_decompArchive_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_enabled_action:testaction:1" question_ref="ocil:ssg-oas_enabled_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_exclusions_action:testaction:1" question_ref="ocil:ssg-oas_exclusions_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_heuristicAnalysis_action:testaction:1" question_ref="ocil:ssg-oas_heuristicAnalysis_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_macroAnalysis_action:testaction:1" question_ref="ocil:ssg-oas_macroAnalysis_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_program_action:testaction:1" question_ref="ocil:ssg-oas_program_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_scanMaxTmo_action:testaction:1" question_ref="ocil:ssg-oas_scanMaxTmo_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_scanNWFiles_action:testaction:1" question_ref="ocil:ssg-oas_scanNWFiles_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_scanOnRead_action:testaction:1" question_ref="ocil:ssg-oas_scanOnRead_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-oas_scanOnWrite_action:testaction:1" question_ref="ocil:ssg-oas_scanOnWrite_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_action_app_primary_action:testaction:1" question_ref="ocil:ssg-ods_action_app_primary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_action_app_secondary_action:testaction:1" question_ref="ocil:ssg-ods_action_app_secondary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_action_default_primary_action:testaction:1" question_ref="ocil:ssg-ods_action_default_primary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_action_default_secondary_action:testaction:1" question_ref="ocil:ssg-ods_action_default_secondary_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_allFiles_action:testaction:1" question_ref="ocil:ssg-ods_allFiles_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_decompArchive_action:testaction:1" question_ref="ocil:ssg-ods_decompArchive_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_extensions_action:testaction:1" question_ref="ocil:ssg-ods_extensions_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_heuristicAnalysis_action:testaction:1" question_ref="ocil:ssg-ods_heuristicAnalysis_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_macroAnalysis_action:testaction:1" question_ref="ocil:ssg-ods_macroAnalysis_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_mime_action:testaction:1" question_ref="ocil:ssg-ods_mime_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_program_action:testaction:1" question_ref="ocil:ssg-ods_program_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
        <ocil:boolean_question_test_action id="ocil:ssg-ods_scanNWFiles_local_action:testaction:1" question_ref="ocil:ssg-ods_scanNWFiles_local_question:question:1">
          <ocil:when_true>
            <ocil:result>PASS</ocil:result>
          </ocil:when_true>
          <ocil:when_false>
            <ocil:result>FAIL</ocil:result>
          </ocil:when_false>
        </ocil:boolean_question_test_action>
      </ocil:test_actions>
      <ocil:questions>
        <ocil:boolean_question id="ocil:ssg-dats_auto_update_question:question:1">
          <ocil:question_text>To verify that anti-virus signature files are updated, login to VSEL Web Monitor and verify the following:
Under View, select Scheduled Tasks.
Under Scheduled Tasks, under Task Summaries, with the assistance of the McAfee VSEL SA, identify the VirusScan DAT update task.
Verify the Type is Update and the Status is Completed with Results of Update Finished.
Under Task Details for the task, click on the Modify button.
Choose 2. Choose what to update and verify the Virus definition files (also known as DAT files) is selected.
      Is it the case that the VirusScan DAT update task doesn't exist or &lt;tt&gt;2. Choose what to update&lt;/tt&gt; does not have &lt;tt&gt;Virus definition files (also known as DAT files)&lt;/tt&gt; selected?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-dats_updated_question:question:1">
          <ocil:question_text>To verify that anti-virus signature files are updated, login to VSEL Web Monitor and verify the following:
Under View, select Host Summary.
In the Host Summary, verify the DAT Date: is within the last 7 days.
      Is it the case that the &lt;tt&gt;DAT Date:&lt;/tt&gt; is older than 7 days?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-virus_notification_question:question:1">
          <ocil:question_text>To verify that Administrators will be notified of events detected, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the notifications.virusDetected.active: true line:
grep 'notifications.virusDetected.active: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;notifications.virusDetected.active: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-web_client_disabled_question:question:1">
          <ocil:question_text>To verify that the WEB GUI will be disabled by default, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.disableCltWebUI: true line:
grep 'nailsd.disableCltWebUI: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.disableCltWebUI: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_action_app_primary_question:question:1">
          <ocil:question_text>To verify that files will attempted to be cleaned first, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.action.App.primary: Clean line:
grep 'nailsd.profile.OAS.action.App.primary: Clean' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.action.App.primary: Clean&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_action_app_secondary_question:question:1">
          <ocil:question_text>To verify that files that cannot be cleaned will be quarantined, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.action.App.secondary: Quarantine line:
grep 'nailsd.profile.OAS.action.App.secondary: Quarantine' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.action.App.secondary: Quarantine&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_action_default_primary_question:question:1">
          <ocil:question_text>To verify that programs/jokes will attempted to be cleaned first, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.action.Default.primary: Clean line:
grep 'nailsd.profile.OAS.action.Default.primary: Clean' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.action.Default.primary: Clean&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_action_default_secondary_question:question:1">
          <ocil:question_text>To verify that programs/jokes that cannot be cleaned will be quarantined, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.action.Default.secondary: Quarantine line:
grep 'nailsd.profile.OAS.action.Default.secondary: Quarantine' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.action.Default.secondary: Quarantine&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_action_error_question:question:1">
          <ocil:question_text>To verify that any file resulting in an error reading the file will be blocked, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.action.error: Block line:
grep 'nailsd.profile.OAS.action.error: Block' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.action.error: Block&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_action_timeout_question:question:1">
          <ocil:question_text>To verify that any file resulting in a timeout reading the file will be passed, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.action.timeout: Pass line:
grep 'nailsd.profile.OAS.action.timeout: Pass' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.action.timeout: Pass&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_allFiles_question:question:1">
          <ocil:question_text>To verify that all file types will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.allFiles: true line:
grep 'nailsd.profile.OAS.allFiles: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.allFiles: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_decompArchive_question:question:1">
          <ocil:question_text>To verify that compressed archives will be decompressed before being scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.decompArchive: true line:
grep 'nailsd.profile.OAS.decompArchive: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.decompArchive: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_enabled_question:question:1">
          <ocil:question_text>To verify that the antivirus software will be running at initial startup of the system, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.oasEnabled: true line:
grep 'nailsd.oasEnabled: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.oasEnabled: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_exclusions_question:question:1">
          <ocil:question_text>To verify that all file types will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.filter.varlog.type: exclude-path and nailsd.profile.OAS.filter.varlog.path: /var/log lines:
grep 'nailsd.profile.OAS.filter.varlog.type: exclude-path' /var/opt/NAI/LinuxShield/etc/nailsd.cfg
grep 'nailsd.profile.OAS.filter.varlog.path' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the lines &lt;pre&gt;nailsd.profile.OAS.filter.varlog.type: exclude-path&lt;/pre&gt; and &lt;tt&gt;nailsd.profile.OAS.filter.varlog.path: /var/log&lt;/tt&gt;?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_heuristicAnalysis_question:question:1">
          <ocil:question_text>To verify that unknown virus programs will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.heuristicAnalysis: true line:
grep 'nailsd.profile.OAS.heuristicAnalysis: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.heuristicAnalysis: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_macroAnalysis_question:question:1">
          <ocil:question_text>To verify that unknown macro viruses will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.macroAnalysis: true line:
grep 'nailsd.profile.OAS.macroAnalysis: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.macroAnalysis: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_program_question:question:1">
          <ocil:question_text>To verify that potentially unwanted programs will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.program: true line:
grep 'nailsd.profile.OAS.program: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.program: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_scanMaxTmo_question:question:1">
          <ocil:question_text>To verify that a scan will not timeout in less than 45 seconds of scanning a file, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.scanMaxTmo: 45 line:
grep 'nailsd.profile.OAS.scanMaxTmo: 45' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.scanMaxTmo: 45&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_scanNWFiles_question:question:1">
          <ocil:question_text>To verify that files on network mounts are scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.scanNWFiles: true line:
grep 'nailsd.profile.OAS.scanNWFiles: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.scanNWFiles: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_scanOnRead_question:question:1">
          <ocil:question_text>To verify that files will be scanned when read from disk, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.scanOnRead: true line:
grep 'nailsd.profile.OAS.scanOnRead: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.scanOnRead: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-oas_scanOnWrite_question:question:1">
          <ocil:question_text>To verify that files will be scanned when written to disk, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/nailsd.cfg contains the nailsd.profile.OAS.scanOnWrite: true line:
grep 'nailsd.profile.OAS.scanOnWrite: true' /var/opt/NAI/LinuxShield/etc/nailsd.cfg.
      Is it the case that the &lt;pre&gt;nailsd.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.OAS.scanOnWrite: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_action_app_primary_question:question:1">
          <ocil:question_text>To verify that files will attempted to be cleaned first, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.action.App.primary: Clean line:
grep 'nailsd.profile.ODS.action.App.primary: Clean' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.action.App.primary: Clean&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_action_app_secondary_question:question:1">
          <ocil:question_text>To verify that files that cannot be cleaned will be quarantined, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.action.App.secondary: Quarantine line:
grep 'nailsd.profile.ODS.action.App.secondary: Quarantine' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.action.App.secondary: Quarantine&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_action_default_primary_question:question:1">
          <ocil:question_text>To verify that programs/jokes will attempted to be cleaned first, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.action.Default.primary: Clean line:
grep 'nailsd.profile.ODS.action.Default.primary: Clean' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.action.Default.primary: Clean&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_action_default_secondary_question:question:1">
          <ocil:question_text>To verify that programs/jokes that cannot be cleaned will be quarantined, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.action.Default.secondary: Quarantine line:
grep 'nailsd.profile.ODS.action.Default.secondary: Quarantine' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.action.Default.secondary: Quarantine&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_allFiles_question:question:1">
          <ocil:question_text>To verify that all file types will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.allFiles: true line:
grep 'nailsd.profile.ODS.allFiles: true' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.allFiles: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_decompArchive_question:question:1">
          <ocil:question_text>To verify that compressed archives will be decompressed before being scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.decompArchive: true line:
grep 'nailsd.profile.ODS.decompArchive: true' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.decompArchive: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_extensions_question:question:1">
          <ocil:question_text>To verify that various extensions are not ignored by the scanner, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains lines with extensions.mode: all:
grep 'extensions.mode: all' /var/opt/NAI/LinuxShield/etc/ods.cfg
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; contains lines with extensions.mode occurences with settings other than &lt;pre&gt;extensions.mode: all&lt;/pre&gt; ?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_heuristicAnalysis_question:question:1">
          <ocil:question_text>To verify that unknown virus programs will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.heuristicAnalysis: true line:
grep 'nailsd.profile.ODS.heuristicAnalysis: true' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.heuristicAnalysis: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_macroAnalysis_question:question:1">
          <ocil:question_text>To verify that unknown macro viruses will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.macroAnalysis: true line:
grep 'nailsd.profile.ODS.macroAnalysis: true' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.macroAnalysis: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_mime_question:question:1">
          <ocil:question_text>To verify that potentially unwanted programs will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.mime: true line:
grep 'nailsd.profile.ODS.mime: true' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.mime: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_program_question:question:1">
          <ocil:question_text>To verify that potentially unwanted programs will be scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.program: true line:
grep 'nailsd.profile.ODS.program: true' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.program: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
        <ocil:boolean_question id="ocil:ssg-ods_scanNWFiles_local_question:question:1">
          <ocil:question_text>To verify that files on network mounts are scanned, 
check the respective VSEL config file
/var/opt/NAI/LinuxShield/etc/ods.cfg contains the nailsd.profile.ODS.scanNWFiles: true line:
grep 'nailsd.profile.ODS.scanNWFiles: true' /var/opt/NAI/LinuxShield/etc/ods.cfg.
      Is it the case that the &lt;pre&gt;ods.cfg&lt;/pre&gt; doesn't contain the &lt;pre&gt;nailsd.profile.ODS.scanNWFiles: true&lt;/pre&gt; line?
      </ocil:question_text>
        </ocil:boolean_question>
      </ocil:questions>
    </ocil:ocil>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-vsel-oval.xml" timestamp="2021-07-29T13:19:05">
    <oval-def:oval_definitions xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#unix unix-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#linux linux-definitions-schema.xsd">
      <oval-def:generator>
        <oval:product_name>combine_ovals.py from SCAP Security Guide</oval:product_name>
        <oval:product_version>ssg: [0, 1, 57], python: 3.9.6</oval:product_version>
        <oval:schema_version>5.10</oval:schema_version>
        <oval:timestamp>2021-07-29T13:14:51</oval:timestamp>
      </oval-def:generator>
      <oval-def:definitions>
        <oval-def:definition class="compliance" id="oval:ssg-virus_notification:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="virus_notification" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check notifications.virusDetected.active" test_ref="oval:ssg-test_virus_notification:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-web_client_disabled:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="web_client_disabled" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.disableCltWebUI" test_ref="oval:ssg-test_web_client_disabled:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_action_app_primary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_action_app_primary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.action.App.primary" test_ref="oval:ssg-test_oas_action_app_primary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_action_app_secondary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_action_app_secondary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.action.App.secondary" test_ref="oval:ssg-test_oas_action_app_secondary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_action_default_primary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_action_default_primary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.action.Default.primary" test_ref="oval:ssg-test_oas_action_default_primary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_action_default_secondary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_action_default_secondary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.action.Default.secondary" test_ref="oval:ssg-test_oas_action_default_secondary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_action_error:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_action_error" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.action.error" test_ref="oval:ssg-test_oas_action_error:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_action_timeout:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_action_timeout" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.action.timeout" test_ref="oval:ssg-test_oas_action_timeout:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_allFiles:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_allFiles" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.allFiles" test_ref="oval:ssg-test_oas_allFiles:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_decompArchive:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_decompArchive" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.decompArchive" test_ref="oval:ssg-test_oas_decompArchive:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_enabled:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_enabled" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.oasEnabled" test_ref="oval:ssg-test_oas_enabled:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_heuristicAnalysis:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_heuristicAnalysis" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.heuristicAnalysis" test_ref="oval:ssg-test_oas_heuristicAnalysis:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_macroAnalysis:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_macroAnalysis" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.macroAnalysis" test_ref="oval:ssg-test_oas_macroAnalysis:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_program:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_program" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.program" test_ref="oval:ssg-test_oas_program:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_scanMaxTmo:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_scanMaxTmo" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.scanMaxTmo" test_ref="oval:ssg-test_oas_scanMaxTmo:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_scanNWFiles:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_scanNWFiles" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.scanNWFiles" test_ref="oval:ssg-test_oas_scanNWFiles:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_scanOnRead:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_scanOnRead" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.scanOnRead" test_ref="oval:ssg-test_oas_scanOnRead:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-oas_scanOnWrite:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="oas_scanOnWrite" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.OAS.scanOnWrite" test_ref="oval:ssg-test_oas_scanOnWrite:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_action_app_primary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_action_app_primary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.action.App.primary" test_ref="oval:ssg-test_ods_action_app_primary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_action_app_secondary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_action_app_secondary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.action.App.secondary" test_ref="oval:ssg-test_ods_action_app_secondary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_action_default_primary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_action_default_primary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check ODS.action.Default.primary" test_ref="oval:ssg-test_ods_action_default_primary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_action_default_secondary:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_action_default_secondary" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check ODS.action.Default.secondary" test_ref="oval:ssg-test_ods_action_default_secondary:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_allFiles:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_allFiles" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.allFiles" test_ref="oval:ssg-test_ods_allFiles:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_decompArchive:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_decompArchive" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.decompArchive" test_ref="oval:ssg-test_ods_decompArchive:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_extensions:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>VSEL ODS configured to include all local drives and their sub-directories.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_extensions" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.filter.extensions.mode" test_ref="oval:ssg-test_ods_filter_extensions:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_heuristicAnalysis:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_heuristicAnalysis" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.heuristicAnalysis" test_ref="oval:ssg-test_ods_heuristicAnalysis:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_macroAnalysis:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_macroAnalysis" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.macroAnalysis" test_ref="oval:ssg-test_ods_macroAnalysis:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_mime:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_mime" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.mime" test_ref="oval:ssg-test_ods_mime:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_program:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_program" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.program" test_ref="oval:ssg-test_ods_program:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="compliance" id="oval:ssg-ods_scanNWFiles_local:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>The McAfee VirusScan Enterprise for Linux  Web interface must be disabled unless the system is on a segregated network.</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:description/>
            <oval-def:reference ref_id="ods_scanNWFiles_local" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria>
            <oval-def:criterion comment="Check nailsd.profile.ODS.scanNWFiles" test_ref="oval:ssg-test_ods_scanNWFiles_local:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
        <oval-def:definition class="inventory" id="oval:ssg-installed_app_is_vsel:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>McAfee VirusScan Enterprise for Linux</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:reference ref_id="installed_app_is_vsel" source="CPE"/>
            <oval-def:description>The application installed on the system is McAfee VSEL 1.9 or 2.0.</oval-def:description>
            <oval-def:reference ref_id="installed_app_is_vsel" source="ssg"/>
          </oval-def:metadata>
          <oval-def:criteria operator="OR">
            <oval-def:criterion comment="McAfee's VSEL 1.9.x is installed" test_ref="oval:ssg-test_vsel_19:tst:1"/>
            <oval-def:criterion comment="McAfee's VSEL 2.0.x is installed" test_ref="oval:ssg-test_vsel_20:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
      </oval-def:definitions>
      <oval-def:tests>
        <ind:textfilecontent54_test check="all" comment="Check notifications.virusDetected.active" id="oval:ssg-test_virus_notification:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_virus_notification:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.disableCltWebUI" id="oval:ssg-test_web_client_disabled:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_web_client_disabled:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.action.App.primary" id="oval:ssg-test_oas_action_app_primary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_action_app_primary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.action.App.secondary" id="oval:ssg-test_oas_action_app_secondary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_action_app_secondary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.action.Default.primary" id="oval:ssg-test_oas_action_default_primary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_action_default_primary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.action.Default.secondary" id="oval:ssg-test_oas_action_default_secondary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_action_default_secondary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.action.error" id="oval:ssg-test_oas_action_error:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_action_error:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.action.timeout" id="oval:ssg-test_oas_action_timeout:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_action_timeout:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.allFiles" id="oval:ssg-test_oas_allFiles:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_allFiles:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.decompArchive" id="oval:ssg-test_oas_decompArchive:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_decompArchive:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.oasEnabled" id="oval:ssg-test_oas_enabled:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_enabled:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.heuristicAnalysis" id="oval:ssg-test_oas_heuristicAnalysis:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_heuristicAnalysis:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.macroAnalysis" id="oval:ssg-test_oas_macroAnalysis:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_macroAnalysis:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.program" id="oval:ssg-test_oas_program:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_program:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.scanMaxTmo" id="oval:ssg-test_oas_scanMaxTmo:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_scanMaxTmo:obj:1"/>
          <ind:state state_ref="oval:ssg-state_oas_scanMaxTmo:ste:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.scanNWFiles" id="oval:ssg-test_oas_scanNWFiles:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_scanNWFiles:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.scanOnRead" id="oval:ssg-test_oas_scanOnRead:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_scanOnRead:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.OAS.scanOnWrite" id="oval:ssg-test_oas_scanOnWrite:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_oas_scanOnWrite:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.action.App.primary" id="oval:ssg-test_ods_action_app_primary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_action_app_primary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.action.App.secondary" id="oval:ssg-test_ods_action_app_secondary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_action_app_secondary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check ODS.action.Default.primary" id="oval:ssg-test_ods_action_default_primary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_action_default_primary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check ODS.action.Default.secondary" id="oval:ssg-test_ods_action_default_secondary:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_action_default_secondary:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.allFiles" id="oval:ssg-test_ods_allFiles:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_allFiles:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.decompArchive" id="oval:ssg-test_ods_decompArchive:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_decompArchive:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" check_existence="at_least_one_exists" comment="Check nailsd.profile.ODS.filter.extensions.mode" id="oval:ssg-test_ods_filter_extensions:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_filter_extensions:obj:1"/>
          <ind:state state_ref="oval:ssg-state_ods_filter_extensions:ste:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.heuristicAnalysis" id="oval:ssg-test_ods_heuristicAnalysis:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_heuristicAnalysis:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.macroAnalysis" id="oval:ssg-test_ods_macroAnalysis:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_macroAnalysis:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.mime" id="oval:ssg-test_ods_mime:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_mime:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.program" id="oval:ssg-test_ods_program:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_program:obj:1"/>
        </ind:textfilecontent54_test>
        <ind:textfilecontent54_test check="all" comment="Check nailsd.profile.ODS.scanNWFiles" id="oval:ssg-test_ods_scanNWFiles_local:tst:1" version="1">
          <ind:object object_ref="oval:ssg-object_ods_scanNWFiles_local:obj:1"/>
        </ind:textfilecontent54_test>
        <linux:rpminfo_test check="all" check_existence="at_least_one_exists" comment="McAfee's VSEL 1.9.x is installed" id="oval:ssg-test_vsel_19:tst:1" version="1">
          <linux:object object_ref="oval:ssg-obj_vsel_19:obj:1"/>
          <linux:state state_ref="oval:ssg-state_vsel_19:ste:1"/>
        </linux:rpminfo_test>
        <linux:rpminfo_test check="all" check_existence="at_least_one_exists" comment="McAfee's VSEL 2.0.x is installed" id="oval:ssg-test_vsel_20:tst:1" version="1">
          <linux:object object_ref="oval:ssg-obj_vsel_20:obj:1"/>
          <linux:state state_ref="oval:ssg-state_vsel_20:ste:1"/>
        </linux:rpminfo_test>
      </oval-def:tests>
      <oval-def:objects>
        <ind:textfilecontent54_object id="oval:ssg-object_virus_notification:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^notifications.virusDetected.active: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_web_client_disabled:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.disableCltWebUI: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_action_app_primary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.action.App.primary: Clean$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_action_app_secondary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.action.App.secondary: Quarantine$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_action_default_primary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.action.Default.primary: Clean$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_action_default_secondary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.action.Default.secondary: Quarantine$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_action_error:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.action.error: Block$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_action_timeout:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.action.timeout: Pass$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_allFiles:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.allFiles: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_decompArchive:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.decompArchive: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_enabled:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.oasEnabled: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_heuristicAnalysis:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.heuristicAnalysis: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_macroAnalysis:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.macroAnalysis: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_program:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.program: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_scanMaxTmo:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.scanMaxTmo:[\s]+(\d+)\s*$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_scanNWFiles:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.scanNWFiles: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_scanOnRead:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.scanOnRead: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_oas_scanOnWrite:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.OAS.scanOnWrite: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_action_app_primary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.action.App.primary: Clean$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_action_app_secondary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.action.App.secondary: Quarantine$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_action_default_primary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.action.Default.primary: Clean$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_action_default_secondary:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.action.Default.secondary: Quarantine$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_allFiles:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.allFiles: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_decompArchive:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.decompArchive: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_filter_extensions:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^.*.extensions.mode: (.*)$</ind:pattern>
          <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_heuristicAnalysis:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.heuristicAnalysis: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_macroAnalysis:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.macroAnalysis: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_mime:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.mime: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_program:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.program: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <ind:textfilecontent54_object id="oval:ssg-object_ods_scanNWFiles_local:obj:1" version="1">
          <ind:filepath>/var/opt/NAI/LinuxShield/etc/ods.cfg</ind:filepath>
          <ind:pattern operation="pattern match">^nailsd.profile.ODS.scanNWFiles: true$</ind:pattern>
          <ind:instance datatype="int">1</ind:instance>
        </ind:textfilecontent54_object>
        <linux:rpminfo_object id="oval:ssg-obj_vsel_19:obj:1" version="1">
          <linux:name operation="pattern match">^McAfeeVSEForLinux$</linux:name>
        </linux:rpminfo_object>
        <linux:rpminfo_object id="oval:ssg-obj_vsel_20:obj:1" version="1">
          <linux:name operation="pattern match">^McAfeeVSEForLinux$</linux:name>
        </linux:rpminfo_object>
      </oval-def:objects>
      <oval-def:states>
        <ind:textfilecontent54_state id="oval:ssg-state_oas_scanMaxTmo:ste:1" version="1">
          <ind:subexpression operation="greater than or equal" datatype="int">45</ind:subexpression>
        </ind:textfilecontent54_state>
        <ind:textfilecontent54_state id="oval:ssg-state_ods_filter_extensions:ste:1" version="1">
          <ind:subexpression datatype="string" operation="pattern match">all</ind:subexpression>
        </ind:textfilecontent54_state>
        <linux:rpminfo_state id="oval:ssg-state_vsel_19:ste:1" version="1">
          <linux:version operation="pattern match">^1.9.*$</linux:version>
        </linux:rpminfo_state>
        <linux:rpminfo_state id="oval:ssg-state_vsel_20:ste:1" version="1">
          <linux:version operation="pattern match">^2.0.*$</linux:version>
        </linux:rpminfo_state>
      </oval-def:states>
    </oval-def:oval_definitions>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-vsel-xccdf-1.2.xml" timestamp="2021-07-29T13:20:28">
    <xccdf-1.2:Benchmark id="xccdf_org.ssgproject.content_benchmark_VSEL" resolved="1" xml:lang="en-US" style="SCAP_1.2">
      <xccdf-1.2:status date="2021-07-29">draft</xccdf-1.2:status>
      <xccdf-1.2:title xml:lang="en-US">Guide to the Secure Configuration of McAfee VirusScan Enterprise for Linux</xccdf-1.2:title>
      <xccdf-1.2:description xml:lang="en-US">This guide presents a catalog of security-relevant
configuration settings for McAfee VirusScan Enterprise for Linux. It is a rendering of
content structured in the eXtensible Configuration Checklist Description Format (XCCDF)
in order to support security automation.  The SCAP content is
is available in the <html:code>scap-security-guide</html:code> package which is developed at

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>.
<html:br/><html:br/>
Providing system administrators with such guidance informs them how to securely
configure systems under their control in a variety of network roles. Policy
makers and baseline creators can use this catalog of settings, with its
associated references to higher-level security control catalogs, in order to
assist them in security baseline creation. This guide is a <html:em>catalog, not a
checklist</html:em>, and satisfaction of every item is not likely to be possible or
sensible in many operational scenarios. However, the XCCDF format enables
granular selection and adjustment of settings, and their association with OVAL
and OCIL content provides an automated checking capability. Transformations of
this document, and its associated automated checking content, are capable of
providing baselines that meet a diverse set of policy objectives. Some example
XCCDF <html:em>Profiles</html:em>, which are selections of items that form checklists and
can be used as baselines, are available with this guide. They can be
processed, in an automated fashion, with tools that support the Security
Content Automation Protocol (SCAP). The DISA STIG for McAfee VirusScan Enterprise for Linux,
which provides required settings for US Department of Defense systems, is
one example of a baseline created from this guidance.
</xccdf-1.2:description>
      <xccdf-1.2:notice xml:lang="en-US" id="terms_of_use">Do not attempt to implement any of the settings in
this guide without first testing them in a non-operational environment. The
creators of this guidance assume no responsibility whatsoever for its use by
other parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic.
</xccdf-1.2:notice>
      <xccdf-1.2:front-matter xml:lang="en-US">The SCAP Security Guide Project<html:br/>

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>
</xccdf-1.2:front-matter>
      <xccdf-1.2:rear-matter xml:lang="en-US">Red Hat and Red Hat Enterprise Linux are either registered
trademarks or trademarks of Red Hat, Inc. in the United States and other
countries. All other names are registered trademarks or trademarks of their
respective companies.
</xccdf-1.2:rear-matter>
      <xccdf-1.2:platform idref="cpe:/a:mcafee:virusscan_enterprise_for_linux:1.9"/>
      <xccdf-1.2:platform idref="cpe:/a:mcafee:virusscan_enterprise_for_linux:2.0"/>
      <xccdf-1.2:version update="https://github.com/OpenSCAP/scap-security-guide/releases/latest">0.1.57</xccdf-1.2:version>
      <xccdf-1.2:metadata>
        <dc:publisher>SCAP Security Guide Project</dc:publisher>
        <dc:creator>SCAP Security Guide Project</dc:creator>
        <dc:contributor>Frank J Cameron (CAM1244) &lt;cameron@ctc.com&gt;</dc:contributor>
        <dc:contributor>0x66656c6978 &lt;0x66656c6978@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Jack Adolph &lt;jack.adolph@gmail.com&gt;</dc:contributor>
        <dc:contributor>Gabe Alford &lt;redhatrises@gmail.com&gt;</dc:contributor>
        <dc:contributor>Firas AlShafei &lt;firas.alshafei@us.abb.com&gt;</dc:contributor>
        <dc:contributor>Rodrigo Alvares &lt;ralvares@redhat.com&gt;</dc:contributor>
        <dc:contributor>Christopher Anderson &lt;cba@fedoraproject.org&gt;</dc:contributor>
        <dc:contributor>angystardust &lt;angystardust@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>anivan-suse &lt;anastasija.ivanovic@suse.com&gt;</dc:contributor>
        <dc:contributor>anixon-rh &lt;55244503+anixon-rh@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Chuck Atkins &lt;chuck.atkins@kitware.com&gt;</dc:contributor>
        <dc:contributor>Ryan Ballanger &lt;root@rballang-admin-2.fastenal.com&gt;</dc:contributor>
        <dc:contributor>Alex Baranowski &lt;alex@euro-linux.com&gt;</dc:contributor>
        <dc:contributor>Eduardo Barretto &lt;eduardo.barretto@canonical.com&gt;</dc:contributor>
        <dc:contributor>Molly Jo Bault &lt;Molly.Jo.Bault@ballardtech.com&gt;</dc:contributor>
        <dc:contributor>Gabriel Becker &lt;ggasparb@redhat.com&gt;</dc:contributor>
        <dc:contributor>Alexander Bergmann &lt;abergmann@suse.com&gt;</dc:contributor>
        <dc:contributor>Dale Bewley &lt;dale@bewley.net&gt;</dc:contributor>
        <dc:contributor>Jose Luis BG &lt;bgjoseluis@gmail.com&gt;</dc:contributor>
        <dc:contributor>Joseph Bisch &lt;joseph.bisch@gmail.com&gt;</dc:contributor>
        <dc:contributor>Jeffrey Blank &lt;blank@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor>Olivier Bonhomme &lt;ptitoliv@ptitoliv.net&gt;</dc:contributor>
        <dc:contributor>Lance Bragstad &lt;lbragstad@gmail.com&gt;</dc:contributor>
        <dc:contributor>Ted Brunell &lt;tbrunell@redhat.com&gt;</dc:contributor>
        <dc:contributor>Matthew Burket &lt;mburket@redhat.com&gt;</dc:contributor>
        <dc:contributor>Blake Burkhart &lt;blake.burkhart@us.af.mil&gt;</dc:contributor>
        <dc:contributor>Patrick Callahan &lt;pmc@patrickcallahan.com&gt;</dc:contributor>
        <dc:contributor>George Campbell &lt;gcampbell@palantir.com&gt;</dc:contributor>
        <dc:contributor>Nick Carboni &lt;ncarboni@redhat.com&gt;</dc:contributor>
        <dc:contributor>James Cassell &lt;james.cassell@ll.mit.edu&gt;</dc:contributor>
        <dc:contributor>Frank Caviggia &lt;fcaviggi@ra.iad.redhat.com&gt;</dc:contributor>
        <dc:contributor>Eric Christensen &lt;echriste@redhat.com&gt;</dc:contributor>
        <dc:contributor>Jayson Cofell &lt;1051437+70k10@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Caleb Cooper &lt;coopercd@ornl.gov&gt;</dc:contributor>
        <dc:contributor>Richard Maciel Costa &lt;richard.maciel.costa@canonical.com&gt;</dc:contributor>
        <dc:contributor>Deric Crago &lt;deric.crago@gmail.com&gt;</dc:contributor>
        <dc:contributor>Will Cushen &lt;wcushen@redhat.com&gt;</dc:contributor>
        <dc:contributor>cyarbrough76 &lt;42849651+cyarbrough76@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Maura Dailey &lt;maura@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor>Klaas Demter &lt;demter@atix.de&gt;</dc:contributor>
        <dc:contributor>dhanushkar-wso2 &lt;dhanushkar@wso2.com&gt;</dc:contributor>
        <dc:contributor>Andrew DiPrinzio &lt;andrew.diprinzio@jhuapl.edu&gt;</dc:contributor>
        <dc:contributor>dom &lt;dominique.blaze@devinci.fr&gt;</dc:contributor>
        <dc:contributor>Jean-Baptiste Donnette &lt;jean-baptiste.donnette@epita.fr&gt;</dc:contributor>
        <dc:contributor>drax &lt;applezip@gmail.com&gt;</dc:contributor>
        <dc:contributor>Sebastian Dunne &lt;sdunne@redhat.com&gt;</dc:contributor>
        <dc:contributor>Fran&#xE7;ois Duthilleul &lt;francoisduthilleul@gmail.com&gt;</dc:contributor>
        <dc:contributor>Greg Elin &lt;gregelin@gitmachines.com&gt;</dc:contributor>
        <dc:contributor>eradot4027 &lt;jrtonmac@gmail.com&gt;</dc:contributor>
        <dc:contributor>Alexis Facques &lt;alexis.facques@mythalesgroup.io&gt;</dc:contributor>
        <dc:contributor>Leah Fisher &lt;lfisher047@gmail.com&gt;</dc:contributor>
        <dc:contributor>Alijohn Ghassemlouei &lt;alijohn@secureagc.com&gt;</dc:contributor>
        <dc:contributor>ghylock &lt;ghylock@gmail.com&gt;</dc:contributor>
        <dc:contributor>Andrew Gilmore &lt;agilmore2@gmail.com&gt;</dc:contributor>
        <dc:contributor>Joshua Glemza &lt;jglemza@nasa.gov&gt;</dc:contributor>
        <dc:contributor>Nick Gompper &lt;forestgomp@yahoo.com&gt;</dc:contributor>
        <dc:contributor>Loren Gordon &lt;lorengordon@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Patrik Greco &lt;sikevux@sikevux.se&gt;</dc:contributor>
        <dc:contributor>Steve Grubb &lt;sgrubb@redhat.com&gt;</dc:contributor>
        <dc:contributor>Marek Haicman &lt;mhaicman@redhat.com&gt;</dc:contributor>
        <dc:contributor>Alex Haydock &lt;alex@alexhaydock.co.uk&gt;</dc:contributor>
        <dc:contributor>Rebekah Hayes &lt;rhayes@corp.rivierautilities.com&gt;</dc:contributor>
        <dc:contributor>Trey Henefield &lt;thenefield@gmail.com&gt;</dc:contributor>
        <dc:contributor>Henning Henkel &lt;henning.henkel@helvetia.ch&gt;</dc:contributor>
        <dc:contributor>hex2a &lt;hex2a@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>John Hooks &lt;jhooks@starscream.pa.jhbcomputers.com&gt;</dc:contributor>
        <dc:contributor>Jakub Hrozek &lt;jhrozek@redhat.com&gt;</dc:contributor>
        <dc:contributor>De Huo &lt;De.Huo@windriver.com&gt;</dc:contributor>
        <dc:contributor>Robin Price II &lt;robin@redhat.com&gt;</dc:contributor>
        <dc:contributor>Yasir Imam &lt;yimam@redhat.com&gt;</dc:contributor>
        <dc:contributor>Jiri Jaburek &lt;jjaburek@redhat.com&gt;</dc:contributor>
        <dc:contributor>Keith Jackson &lt;keithkjackson@gmail.com&gt;</dc:contributor>
        <dc:contributor>Jeremiah Jahn &lt;jeremiah@goodinassociates.com&gt;</dc:contributor>
        <dc:contributor>Jakub Jelen &lt;jjelen@redhat.com&gt;</dc:contributor>
        <dc:contributor>Jessicahfy &lt;Jessicahfy@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Stephan Joerrens &lt;Stephan.Joerrens@fiduciagad.de&gt;</dc:contributor>
        <dc:contributor>Jono &lt;jono@ubuntu-18.localdomain&gt;</dc:contributor>
        <dc:contributor>Kai Kang &lt;kai.kang@windriver.com&gt;</dc:contributor>
        <dc:contributor>Charles Kernstock &lt;charles.kernstock@ultra-ats.com&gt;</dc:contributor>
        <dc:contributor>Yuli Khodorkovskiy &lt;ykhodorkovskiy@tresys.com&gt;</dc:contributor>
        <dc:contributor>Nathan Kinder &lt;nkinder@redhat.com&gt;</dc:contributor>
        <dc:contributor>Lee Kinser &lt;lee.kinser@gmail.com&gt;</dc:contributor>
        <dc:contributor>Evgeny Kolesnikov &lt;ekolesni@redhat.com&gt;</dc:contributor>
        <dc:contributor>Peter 'Pessoft' Kol&#xED;nek &lt;github@pessoft.com&gt;</dc:contributor>
        <dc:contributor>Luke Kordell &lt;luke.t.kordell@lmco.com&gt;</dc:contributor>
        <dc:contributor>Malte Kraus &lt;malte.kraus@suse.com&gt;</dc:contributor>
        <dc:contributor>Seth Kress &lt;seth.kress@dsainc.com&gt;</dc:contributor>
        <dc:contributor>kspargur &lt;kspargur@kspargur.csb&gt;</dc:contributor>
        <dc:contributor>Amit Kumar &lt;amitkuma@redhat.com&gt;</dc:contributor>
        <dc:contributor>Fen Labalme &lt;fen@civicactions.com&gt;</dc:contributor>
        <dc:contributor>Ade Lee &lt;alee@redhat.com&gt;</dc:contributor>
        <dc:contributor>Christopher Lee &lt;Crleekwc@gmail.com&gt;</dc:contributor>
        <dc:contributor>Ian Lee &lt;lee1001@llnl.gov&gt;</dc:contributor>
        <dc:contributor>Jarrett Lee &lt;jarrettl@umd.edu&gt;</dc:contributor>
        <dc:contributor>Joseph Lenox &lt;lordofhyphens@gmail.com&gt;</dc:contributor>
        <dc:contributor>Jan Lieskovsky &lt;jlieskov@redhat.com&gt;</dc:contributor>
        <dc:contributor>&#x160;imon Luka&#x161;&#xED;k &lt;slukasik@redhat.com&gt;</dc:contributor>
        <dc:contributor>Milan Lysonek &lt;mlysonek@redhat.com&gt;</dc:contributor>
        <dc:contributor>Fredrik Lys&#xE9;n &lt;fredrik@pipemore.se&gt;</dc:contributor>
        <dc:contributor>Caitlin Macleod &lt;caitelatte@gmail.com&gt;</dc:contributor>
        <dc:contributor>Nick Maludy &lt;nmaludy@gmail.com&gt;</dc:contributor>
        <dc:contributor>Lokesh Mandvekar &lt;lsm5@fedoraproject.org&gt;</dc:contributor>
        <dc:contributor>Matus Marhefka &lt;mmarhefk@redhat.com&gt;</dc:contributor>
        <dc:contributor>Jamie Lorwey Martin &lt;jlmartin@redhat.com&gt;</dc:contributor>
        <dc:contributor>Carlos Matos &lt;cmatos@redhat.com&gt;</dc:contributor>
        <dc:contributor>Robert McAllister &lt;rmcallis@redhat.com&gt;</dc:contributor>
        <dc:contributor>Michael McConachie &lt;michael@redhat.com&gt;</dc:contributor>
        <dc:contributor>Marcus Meissner &lt;meissner@suse.de&gt;</dc:contributor>
        <dc:contributor>Khary Mendez &lt;kmendez@redhat.com&gt;</dc:contributor>
        <dc:contributor>Rodney Mercer &lt;rmercer@harris.com&gt;</dc:contributor>
        <dc:contributor>Matt Micene &lt;nzwulfin@gmail.com&gt;</dc:contributor>
        <dc:contributor>Brian Millett &lt;bmillett@gmail.com&gt;</dc:contributor>
        <dc:contributor>Takuya Mishina &lt;tmishina@jp.ibm.com&gt;</dc:contributor>
        <dc:contributor>Mixer9 &lt;35545791+Mixer9@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>mmosel &lt;mmosel@kde.example.com&gt;</dc:contributor>
        <dc:contributor>Zbynek Moravec &lt;zmoravec@redhat.com&gt;</dc:contributor>
        <dc:contributor>Kazuo Moriwaka &lt;moriwaka@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Michael Moseley &lt;michael@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor>Renaud M&#xE9;trich &lt;rmetrich@redhat.com&gt;</dc:contributor>
        <dc:contributor>Joe Nall &lt;joe@nall.com&gt;</dc:contributor>
        <dc:contributor>Neiloy &lt;neiloy@redhat.com&gt;</dc:contributor>
        <dc:contributor>Axel Nennker &lt;axel@nennker.de&gt;</dc:contributor>
        <dc:contributor>Michele Newman &lt;mnewman@redhat.com&gt;</dc:contributor>
        <dc:contributor>Sean O'Keeffe &lt;seanokeeffe797@gmail.com&gt;</dc:contributor>
        <dc:contributor>Ilya Okomin &lt;ilya.okomin@oracle.com&gt;</dc:contributor>
        <dc:contributor>Kaustubh Padegaonkar &lt;theTuxRacer@gmail.com&gt;</dc:contributor>
        <dc:contributor>Michael Palmiotto &lt;mpalmiotto@tresys.com&gt;</dc:contributor>
        <dc:contributor>Eryx Paredes &lt;eryxp@lyft.com&gt;</dc:contributor>
        <dc:contributor>Max R.D. Parmer &lt;maxp@trystero.is&gt;</dc:contributor>
        <dc:contributor>Jan Pazdziora &lt;jpazdziora@redhat.com&gt;</dc:contributor>
        <dc:contributor>pcactr &lt;paul.c.arnold4.ctr@mail.mil&gt;</dc:contributor>
        <dc:contributor>Kenneth Peeples &lt;kennethwpeeples@gmail.com&gt;</dc:contributor>
        <dc:contributor>Nathan Peters &lt;Nathaniel.Peters@ca.com&gt;</dc:contributor>
        <dc:contributor>Frank Lin PIAT &lt;fpiat@klabs.be&gt;</dc:contributor>
        <dc:contributor>Stefan Pietsch &lt;mail.ipv4v6+gh@gmail.com&gt;</dc:contributor>
        <dc:contributor>piggyvenus &lt;piggyvenus@gmail.com&gt;</dc:contributor>
        <dc:contributor>Vojtech Polasek &lt;vpolasek@redhat.com&gt;</dc:contributor>
        <dc:contributor>Orion Poplawski &lt;orion@nwra.com&gt;</dc:contributor>
        <dc:contributor>Nick Poyant &lt;npoyant@redhat.com&gt;</dc:contributor>
        <dc:contributor>Martin Preisler &lt;mpreisle@redhat.com&gt;</dc:contributor>
        <dc:contributor>Wesley Ceraso Prudencio &lt;wcerasop@redhat.com&gt;</dc:contributor>
        <dc:contributor>Raphael Sanchez Prudencio &lt;rsprudencio@redhat.com&gt;</dc:contributor>
        <dc:contributor>T.O. Radzy Radzykewycz &lt;radzy@windriver.com&gt;</dc:contributor>
        <dc:contributor>Kenyon Ralph &lt;kenyon@kenyonralph.com&gt;</dc:contributor>
        <dc:contributor>Mike Ralph &lt;mralph@redhat.com&gt;</dc:contributor>
        <dc:contributor>Federico Ramirez &lt;federico.r.ramirez@oracle.com&gt;</dc:contributor>
        <dc:contributor>rchikov &lt;rumen.chikov@suse.com&gt;</dc:contributor>
        <dc:contributor>Rick Renshaw &lt;Richard_Renshaw@xtoenergy.com&gt;</dc:contributor>
        <dc:contributor>Chris Reynolds &lt;c.reynolds82@gmail.com&gt;</dc:contributor>
        <dc:contributor>rhayes &lt;rhayes@rivierautilities.com&gt;</dc:contributor>
        <dc:contributor>Pat Riehecky &lt;riehecky@fnal.gov&gt;</dc:contributor>
        <dc:contributor>rlucente-se-jboss &lt;rlucente@redhat.com&gt;</dc:contributor>
        <dc:contributor>Juan Antonio Osorio Robles &lt;jaosorior@redhat.com&gt;</dc:contributor>
        <dc:contributor>Matt Rogers &lt;mrogers@redhat.com&gt;</dc:contributor>
        <dc:contributor>Jesse Roland &lt;jesse.roland@onyxpoint.com&gt;</dc:contributor>
        <dc:contributor>Joshua Roys &lt;roysjosh@gmail.com&gt;</dc:contributor>
        <dc:contributor>rrenshaw &lt;bofh69@yahoo.com&gt;</dc:contributor>
        <dc:contributor>Chris Ruffalo &lt;chris.ruffalo@gmail.com&gt;</dc:contributor>
        <dc:contributor>Ray Shaw (Cont ARL/CISD) rvshaw &lt;rvshaw@esme.arl.army.mil&gt;</dc:contributor>
        <dc:contributor>Earl Sampson &lt;ESampson@suse.com&gt;</dc:contributor>
        <dc:contributor>Willy Santos &lt;wsantos@redhat.com&gt;</dc:contributor>
        <dc:contributor>Gautam Satish &lt;gautams@hpe.com&gt;</dc:contributor>
        <dc:contributor>Watson Sato &lt;wsato@redhat.com&gt;</dc:contributor>
        <dc:contributor>Satoru SATOH &lt;satoru.satoh@gmail.com&gt;</dc:contributor>
        <dc:contributor>Alexander Scheel &lt;ascheel@redhat.com&gt;</dc:contributor>
        <dc:contributor>Bryan Schneiders &lt;pschneiders@trisept.com&gt;</dc:contributor>
        <dc:contributor>shaneboulden &lt;shane.boulden@gmail.com&gt;</dc:contributor>
        <dc:contributor>Spencer Shimko &lt;sshimko@tresys.com&gt;</dc:contributor>
        <dc:contributor>Mark Shoger &lt;mshoger@redhat.com&gt;</dc:contributor>
        <dc:contributor>Thomas Sj&#xF6;gren &lt;konstruktoid@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Francisco Slavin &lt;fslavin@tresys.com&gt;</dc:contributor>
        <dc:contributor>David Smith &lt;dsmith@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor>Kevin Spargur &lt;kspargur@redhat.com&gt;</dc:contributor>
        <dc:contributor>Kenneth Stailey &lt;kstailey.lists@gmail.com&gt;</dc:contributor>
        <dc:contributor>Leland Steinke &lt;leland.j.steinke.ctr@mail.mil&gt;</dc:contributor>
        <dc:contributor>Justin Stephenson &lt;jstephen@redhat.com&gt;</dc:contributor>
        <dc:contributor>Brian Stinson &lt;brian@bstinson.com&gt;</dc:contributor>
        <dc:contributor>Jake Stookey &lt;jakestookey@gmail.com&gt;</dc:contributor>
        <dc:contributor>Jonathan Sturges &lt;jsturges@redhat.com&gt;</dc:contributor>
        <dc:contributor>teacup-on-rockingchair &lt;strandjata@gmail.com&gt;</dc:contributor>
        <dc:contributor>Ian Tewksbury &lt;itewk@redhat.com&gt;</dc:contributor>
        <dc:contributor>Philippe Thierry &lt;phil@reseau-libre.net&gt;</dc:contributor>
        <dc:contributor>Derek Thurston &lt;thegrit@gmail.com&gt;</dc:contributor>
        <dc:contributor>tianzhenjia &lt;jiatianzhen@cmss.chinamobile.com&gt;</dc:contributor>
        <dc:contributor>Greg Tinsley &lt;gtinsley@redhat.com&gt;</dc:contributor>
        <dc:contributor>Paul Tittle &lt;ptittle@cmf.nrl.navy.mil&gt;</dc:contributor>
        <dc:contributor>tomas.hudik &lt;tomas.hudik@embedit.cz&gt;</dc:contributor>
        <dc:contributor>Jeb Trayer &lt;jeb.d.trayer@uscg.mil&gt;</dc:contributor>
        <dc:contributor>Viktors Trubovics &lt;viktors.trubovics@suse.com&gt;</dc:contributor>
        <dc:contributor>Nico Truzzolino &lt;nico.truzzolino@gmx.de&gt;</dc:contributor>
        <dc:contributor>Brian Turek &lt;brian.turek@gmail.com&gt;</dc:contributor>
        <dc:contributor>Mat&#x11B;j T&#xFD;&#x10D; &lt;matyc@redhat.com&gt;</dc:contributor>
        <dc:contributor>Trevor Vaughan &lt;tvaughan@onyxpoint.com&gt;</dc:contributor>
        <dc:contributor>Samuel Warren &lt;swarren@redhat.com&gt;</dc:contributor>
        <dc:contributor>Shawn Wells &lt;shawn@shawndwells.io&gt;</dc:contributor>
        <dc:contributor>Daniel E. White &lt;linuxdan@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor>Bernhard M. Wiedemann &lt;bwiedemann@suse.de&gt;</dc:contributor>
        <dc:contributor>Roy Williams &lt;roywilli@roywilli.redhat.com&gt;</dc:contributor>
        <dc:contributor>Willumpie &lt;willumpie@xs4all.nl&gt;</dc:contributor>
        <dc:contributor>Rob Wilmoth &lt;rwilmoth@redhat.com&gt;</dc:contributor>
        <dc:contributor>Lucas Yamanishi &lt;lucas.yamanishi@onyxpoint.com&gt;</dc:contributor>
        <dc:contributor>Xirui Yang &lt;xirui.yang@oracle.com&gt;</dc:contributor>
        <dc:contributor>yarunachalam &lt;yarunachalam@suse.com&gt;</dc:contributor>
        <dc:contributor>Guang Yee &lt;guang.yee@suse.com&gt;</dc:contributor>
        <dc:contributor>Kevin Zimmerman &lt;kevin.zimmerman@kitware.com&gt;</dc:contributor>
        <dc:contributor>Jan &#x10C;ern&#xFD; &lt;jcerny@redhat.com&gt;</dc:contributor>
        <dc:contributor>Michal &#x160;ruba&#x159; &lt;msrubar@redhat.com&gt;</dc:contributor>
        <dc:source>https://github.com/OpenSCAP/scap-security-guide/releases/latest</dc:source>
      </xccdf-1.2:metadata>
      <xccdf-1.2:model system="urn:xccdf:scoring:default"/>
      <xccdf-1.2:Profile id="xccdf_org.ssgproject.content_profile_stig">
        <xccdf-1.2:title xml:lang="en-US" override="true">McAfee VirusScan Enterprise for Linux (VSEL) STIG</xccdf-1.2:title>
        <xccdf-1.2:description xml:lang="en-US" override="true">The McAfee VirusScan Enterprise for Linux software provides a realtime virus scanner for Linux systems.</xccdf-1.2:description>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_dats_auto_update" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_dats_updated" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_action_app_primary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_action_app_secondary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_action_default_primary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_action_default_secondary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_action_error" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_action_timeout" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_allFiles" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_decompArchive" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_enabled" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_exclusions" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_heuristicAnalysis" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_macroAnalysis" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_program" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_scanMaxTmo" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_scanNWFiles" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_scanOnRead" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_oas_scanOnWrite" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_action_app_primary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_action_app_secondary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_action_default_primary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_action_default_secondary" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_allFiles" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_decompArchive" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_enabled" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_exclusions" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_extensions" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_heuristicAnalysis" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_macroAnalysis" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_mime" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_program" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_ods_scanNWFiles_local" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_restricted_user" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_scanned_media" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_updates_source" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_virus_notification" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_web_client_disabled" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_rule_web_client_firewalled" selected="true"/>
        <xccdf-1.2:select idref="xccdf_org.ssgproject.content_group_remediation_functions" selected="false"/>
      </xccdf-1.2:Profile>
      <xccdf-1.2:Group id="xccdf_org.ssgproject.content_group_remediation_functions">
        <xccdf-1.2:title xml:lang="en-US">Remediation functions used by the SCAP Security Guide Project</xccdf-1.2:title>
        <xccdf-1.2:description xml:lang="en-US">XCCDF form of the various remediation functions as used by remediation scripts from the SCAP Security Guide Project.</xccdf-1.2:description>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_create_audit_remediation_unsuccessful_file_modification_detailed" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function create_audit_remediation_unsuccessful_file_modification_detailed</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value>function create_audit_remediation_unsuccessful_file_modification_detailed {
	mkdir -p "$(dirname "$1")"
	# The - option to mark a here document limit string (&lt;&lt;-EOF) suppresses leading tabs (but not spaces) in the output.
	cat &lt;&lt;-EOF &gt; "$1"
		## This content is a section of an Audit config snapshot recommended for linux systems that target OSPP compliance.
		## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

		## The purpose of these rules is to meet the requirements for Operating
		## System Protection Profile (OSPP)v4.2. These rules depends on having
		## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

		## Unsuccessful file creation (open with O_CREAT)
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

		## Unsuccessful file modifications (open for write or truncate)
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

		## Unsuccessful file access (any other opens) This has to go last.
		-a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
		-a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
		-a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
		-a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
	EOF
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_die" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function die</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value># Print a message to stderr and exit the shell
# $1: The message to print.
# $2: The error code (optional, default is 1)
function die {
	local _message="$1" _rc="${2:-1}"
	printf '%s\n' "$_message" &gt;&amp;2
	exit "$_rc"
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_ensure_pam_module_options" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function ensure_pam_module_options</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value>function ensure_pam_module_options {
	if [ $# -lt 7 ] || [ $# -gt 8 ] ; then
                echo "$0 requires seven or eight arguments" &gt;&amp;2
                exit 1
        fi
	local _pamFile="$1" _type="$2" _control="$3" _module="$4" _option="$5" _valueRegex="$6" _defaultValue="$7"
	local _remove_argument=""
	if [ $# -eq 8 ] ; then
        	_remove_argument="$8"
		# convert it to lowercase
		_remove_argument=${_remove_argument,,}
	fi

	# make sure that we have a line like this in ${_pamFile} (additional options are left as-is):
	# ${_type} ${_control} ${_module} ${_option}=${_valueRegex}

	if ! [ -e "$_pamFile" ] ; then
		echo "$_pamFile doesn't exist" &gt;&amp;2
		exit 1
	fi

	# if remove argument only
	if [ "${_remove_argument}" = "yes" -o "${_remove_argument}" = "true" ] ; then
		sed --follow-symlinks -i -E -e "s/^(\\s*${_type}\\s+\\S+\\s+${_module}(\\s.+)?)\\s${_option}(=\\S+)?/\\1/" "${_pamFile}"
		exit 0
	fi

	# non-empty values need to be preceded by an equals sign
	[ -n "${_valueRegex}" ] &amp;&amp; _valueRegex="=${_valueRegex}"
	# add an equals sign to non-empty values
	[ -n "${_defaultValue}" ] &amp;&amp; _defaultValue="=${_defaultValue}"

	# fix 'type' if it's wrong
	if grep -q -P "^\\s*(?"'!'"${_type}\\s)[[:alnum:]]+\\s+[[:alnum:]]+\\s+${_module}" &lt; "${_pamFile}" ; then
		sed --follow-symlinks -i -E -e "s/^(\\s*)[[:alnum:]]+(\\s+[[:alnum:]]+\\s+${_module})/\\1${_type}\\2/" "${_pamFile}"
	fi

	# fix 'control' if it's wrong
	if grep -q -P "^\\s*${_type}\\s+(?"'!'"${_control})[[:alnum:]]+\\s+${_module}" &lt; "${_pamFile}" ; then
		sed --follow-symlinks -i -E -e "s/^(\\s*${_type}\\s+)[[:alnum:]]+(\\s+${_module})/\\1${_control}\\2/" "${_pamFile}"
	fi

	# fix the value for 'option' if one exists but does not match '_valueRegex'
    if grep -q -P "^\\s*${_type}\\s+${_control}\\s+${_module}(\\s.+)?\\s+${_option}(?"'!'"${_valueRegex}(\\s|\$))" &lt; "${_pamFile}" ; then
		sed --follow-symlinks -i -E -e "s/^(\\s*${_type}\\s+${_control}\\s+${_module}(\\s.+)?\\s)${_option}=[^[:space:]]*/\\1${_option}${_defaultValue}/" "${_pamFile}"

    # add 'option=default' if option is not set
	elif grep -q -E "^\\s*${_type}\\s+${_control}\\s+${_module}" &lt; "${_pamFile}" &amp;&amp;
         grep    -E "^\\s*${_type}\\s+${_control}\\s+${_module}" &lt; "${_pamFile}" | grep -q -E -v "\\s${_option}(=|\\s|\$)" ; then

		sed --follow-symlinks -i -E -e "s/^(\\s*${_type}\\s+${_control}\\s+${_module}[^\\n]*)/\\1 ${_option}${_defaultValue}/" "${_pamFile}"
	# add a new entry if none exists
	elif ! grep -q -P "^\\s*${_type}\\s+${_control}\\s+${_module}(\\s.+)?\\s+${_option}${_valueRegex}(\\s|\$)" &lt; "${_pamFile}" ; then
		echo "${_type} ${_control} ${_module} ${_option}${_defaultValue}" &gt;&gt; "${_pamFile}"
	fi
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_fix_audit_syscall_rule" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function fix_audit_syscall_rule</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value># Function to fix syscall audit rule for given system call. It is
# based on example audit syscall rule definitions as outlined in
# /usr/share/doc/audit-2.3.7/stig.rules file provided with the audit
# package. It will combine multiple system calls belonging to the same
# syscall group into one audit rule (rather than to create audit rule per
# different system call) to avoid audit infrastructure performance penalty
# in the case of 'one-audit-rule-definition-per-one-system-call'. See:
#
#   https://www.redhat.com/archives/linux-audit/2014-November/msg00009.html
#
# for further details.
#
# Expects five arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules
# * audit rules' pattern		audit rule skeleton for same syscall
# * syscall group			greatest common string this rule shares
# 					with other rules from the same group
# * architecture			architecture this rule is intended for
# * full form of new rule to add	expected full form of audit rule as to be
# 					added into audit.rules file
#
# Note: The 2-th up to 4-th arguments are used to determine how many existing
# audit rules will be inspected for resemblance with the new audit rule
# (5-th argument) the function is going to add. The rule's similarity check
# is performed to optimize audit.rules definition (merge syscalls of the same
# group into one rule) to avoid the "single-syscall-per-audit-rule" performance
# penalty.
#
# Example call:
#
#	See e.g. 'audit_rules_file_deletion_events.sh' remediation script
#
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
	echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

retval=0

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	return 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect+=('/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
	# Extract audit $key from audit rule so we can use it later
	matches=()
	key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)' '|' "$full_rule" : '.*-F[[:space:]]key=\([^[:space:]]\+\)')
	readarray -t matches &lt; &lt;(sed -s -n -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules)
	if [ $? -ne 0 ]
	then
		retval=1
	fi
	for match in "${matches[@]}"
	do
		files_to_inspect+=("${match}")
	done
	# Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
	if [ ${#files_to_inspect[@]} -eq "0" ]
	then
		file_to_inspect="/etc/audit/rules.d/$key.rules"
		files_to_inspect=("$file_to_inspect")
		if [ ! -e "$file_to_inspect" ]
		then
			touch "$file_to_inspect"
			chmod 0640 "$file_to_inspect"
		fi
	fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do
	# Filter existing $audit_file rules' definitions to select those that:
	# * follow the rule pattern, and
	# * meet the hardware architecture requirement, and
	# * are current syscall group specific
	readarray -t existing_rules &lt; &lt;(sed -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file")
	if [ $? -ne 0 ]
	then
		retval=1
	fi

	# Process rules found case-by-case
	for rule in "${existing_rules[@]}"
	do
		# Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
		if [ "${rule}" != "${full_rule}" ]
		then
			# If so, isolate just '(-S \w)+' substring of that rule
			rule_syscalls=$(echo "$rule" | grep -o -P '(-S \w+ )+')
			# Check if list of '-S syscall' arguments of that rule is subset
			# of '-S syscall' list of expected $full_rule
			if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
			then
				# Rule is covered (i.e. the list of -S syscalls for this rule is
				# subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
				# Thus delete the rule from audit.rules &amp; our array
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi
				existing_rules=("${existing_rules[@]//$rule/}")
			else
				# Rule isn't covered by $full_rule - it besides -S syscall arguments
				# for this group contains also -S syscall arguments for other syscall
				# group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
				# since 'lchown' &amp; 'fchownat' share 'chown' substring
				# Therefore:
				# * 1) delete the original rule from audit.rules
				# (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
				# * 2) delete the -S syscall arguments for this syscall group, but
				# keep those not belonging to this syscall group
				# (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
				# * 3) append the modified (filtered) rule again into audit.rules
				# if the same rule not already present
				#
				# 1) Delete the original rule
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi

				# 2) Delete syscalls for this group, but keep those from other groups
				# Convert current rule syscall's string into array splitting by '-S' delimiter
				IFS_BKP="$IFS"
				IFS=$'-S'
				read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
				# Reset IFS back to default
				IFS="$IFS_BKP"
				# Splitting by "-S" can't be replaced by the readarray functionality easily

				# Declare new empty string to hold '-S syscall' arguments from other groups
				new_syscalls_for_rule=''
				# Walk through existing '-S syscall' arguments
				for syscall_arg in "${rule_syscalls_as_array[@]}"
				do
					# Skip empty $syscall_arg values
					if [ "$syscall_arg" == '' ]
					then
						continue
					fi
					# If the '-S syscall' doesn't belong to current group add it to the new list
					# (together with adding '-S' delimiter back for each of such item found)
					if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
					then
						new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
					fi
				done
				# Replace original '-S syscall' list with the new one for this rule
				updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
				# Squeeze repeated whitespace characters in rule definition (if any) into one
				updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
				# 3) Append the modified / filtered rule again into audit.rules
				#    (but only in case it's not present yet to prevent duplicate definitions)
				if ! grep -q -- "$updated_rule" "$audit_file"
				then
					echo "$updated_rule" &gt;&gt; "$audit_file"
				fi
			fi
		else
			# $audit_file already contains the expected rule form for this
			# architecture &amp; key =&gt; don't insert it second time
			append_expected_rule=1
		fi
	done

	# We deleted all rules that were subset of the expected one for this arch &amp; key.
	# Also isolated rules containing system calls not from this system calls group.
	# Now append the expected rule if it's not present in $audit_file yet
	if [[ ${append_expected_rule} -eq "0" ]]
	then
		echo "$full_rule" &gt;&gt; "$audit_file"
	fi
done

return $retval

}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_fix_audit_watch_rule" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function fix_audit_watch_rule</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value># Function to fix audit file system object watch rule for given path:
# * if rule exists, also verifies the -w bits match the requirements
# * if rule doesn't exist yet, appends expected rule form to $files_to_inspect
#   audit rules file, depending on the tool which was used to load audit rules
#
# Expects four arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules'
# * path                        	value of -w audit rule's argument
# * required access bits        	value of -p audit rule's argument
# * key                         	value of -k audit rule's argument
#
# Example call:
#
#       fix_audit_watch_rule "auditctl" "/etc/localtime" "wa" "audit_time_rules"
#
function fix_audit_watch_rule {

# Load function arguments into local variables
local tool="$1"
local path="$2"
local required_access_bits="$3"
local key="$4"

# Check sanity of the input
if [ $# -ne "4" ]
then
	echo "Usage: fix_audit_watch_rule 'tool' 'path' 'bits' 'key'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
#
# -----------------------------------------------------------------------------------------
# Tool used to load audit rules	| Rule already defined	|  Audit rules file to inspect	  |
# -----------------------------------------------------------------------------------------
#	auditctl		|     Doesn't matter	|  /etc/audit/audit.rules	  |
# -----------------------------------------------------------------------------------------
# 	augenrules		|          Yes		|  /etc/audit/rules.d/*.rules	  |
# 	augenrules		|          No		|  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
declare -a files_to_inspect
files_to_inspect=()

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If the audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# into the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect+=('/etc/audit/audit.rules')
# If the audit is 'augenrules', then check if rule is already defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to list of files for inspection.
# If rule isn't defined, add '/etc/audit/rules.d/$key.rules' to list of files for inspection.
elif [ "$tool" == 'augenrules' ]
then
	readarray -t matches &lt; &lt;(grep -P "[\s]*-w[\s]+$path" /etc/audit/rules.d/*.rules)

	# For each of the matched entries
	for match in "${matches[@]}"
	do
		# Extract filepath from the match
		rulesd_audit_file=$(echo $match | cut -f1 -d ':')
		# Append that path into list of files for inspection
		files_to_inspect+=("$rulesd_audit_file")
	done
	# Case when particular audit rule isn't defined yet
	if [ "${#files_to_inspect[@]}" -eq "0" ]
	then
		# Append '/etc/audit/rules.d/$key.rules' into list of files for inspection
		local key_rule_file="/etc/audit/rules.d/$key.rules"
		# If the $key.rules file doesn't exist yet, create it with correct permissions
		if [ ! -e "$key_rule_file" ]
		then
			touch "$key_rule_file"
			chmod 0640 "$key_rule_file"
		fi

		files_to_inspect+=("$key_rule_file")
	fi
fi

# Finally perform the inspection and possible subsequent audit rule
# correction for each of the files previously identified for inspection
for audit_rules_file in "${files_to_inspect[@]}"
do

	# Check if audit watch file system object rule for given path already present
	if grep -q -P -- "[\s]*-w[\s]+$path" "$audit_rules_file"
	then
		# Rule is found =&gt; verify yet if existing rule definition contains
		# all of the required access type bits

		# Escape slashes in path for use in sed pattern below
		local esc_path=${path//$'/'/$'\/'}
		# Define BRE whitespace class shortcut
		local sp="[[:space:]]"
		# Extract current permission access types (e.g. -p [r|w|x|a] values) from audit rule
		current_access_bits=$(sed -ne "s/$sp*-w$sp\+$esc_path$sp\+-p$sp\+\([rxwa]\{1,4\}\).*/\1/p" "$audit_rules_file")
		# Split required access bits string into characters array
		# (to check bit's presence for one bit at a time)
		for access_bit in $(echo "$required_access_bits" | grep -o .)
		do
			# For each from the required access bits (e.g. 'w', 'a') check
			# if they are already present in current access bits for rule.
			# If not, append that bit at the end
			if ! grep -q "$access_bit" &lt;&lt;&lt; "$current_access_bits"
			then
				# Concatenate the existing mask with the missing bit
				current_access_bits="$current_access_bits$access_bit"
			fi
		done
		# Propagate the updated rule's access bits (original + the required
		# ones) back into the /etc/audit/audit.rules file for that rule
		sed -i "s/\($sp*-w$sp\+$esc_path$sp\+-p$sp\+\)\([rxwa]\{1,4\}\)\(.*\)/\1$current_access_bits\3/" "$audit_rules_file"
	else
		# Rule isn't present yet. Append it at the end of $audit_rules_file file
		# with proper key

		echo "-w $path -p $required_access_bits -k $key" &gt;&gt; "$audit_rules_file"
	fi
done
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_include_merge_files_by_lines" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function include_merge_files_by_lines</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value>function include_merge_files_by_lines {
	:
}

# 1: Filename of the "master" file
# 2: Filename of the newly created file
function create_empty_file_like {
	local lines_count
	lines_count=$(cat "$1" | wc -l)
	for _ in $(seq 1 "$lines_count"); do
		printf '\n' &gt;&gt; "$2"
	done
}


# 1: Filename of the "master" file
# 2: Filename of sample flie
function second_file_is_same_except_newlines {
	local lines_of_master lines_of_sample len_of_master line_number i
	readarray -t lines_of_master &lt; "$1"
	readarray -t lines_of_sample &lt; "$2"

	len_of_master="${#lines_of_master[@]}"
	if test "$len_of_master" != "${#lines_of_sample[@]}"; then
		echo "Files '$1' and '$2' have different number of lines, $len_of_master and ${#lines_of_sample[@]} respectively."
		return 1
	fi

	for line_number in $(seq 1 "$len_of_master"); do
		i=$((line_number - 1))
		test -n "${lines_of_sample[$i]}" || continue
		if test "${lines_of_master[$i]}" != "${lines_of_sample[$i]}"; then
			echo "Line $line_number is different in files '$1' and '$2'."
			return 1
		fi
	done
}


# 1: Filename of the "master" file
# 2: Filename of sample flie
# 3: List of indices (1-based, space-separated string)
function merge_first_lines_to_second_on_indices {
	local lines_of_master lines_of_sample line_number i
	test -f "$2" || create_empty_file_like "$1" "$2"

	readarray -t lines_of_master &lt; "$1"
	readarray -t lines_of_sample &lt; "$2"

	error_msg="$(second_file_is_same_except_newlines "$1" "$2")"
	if test $? != 0; then
		echo "Error merging lines into '$2': $error_msg" &gt;&amp;2
		return 1
	fi

	for line_number in $3; do
		i=$((line_number - 1))
		lines_of_sample[$i]="${lines_of_master[$i]}"
	done

	printf "%s\n" "${lines_of_sample[@]}" &gt; "$2"
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_include_mount_options_functions" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function include_mount_options_functions</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value>function include_mount_options_functions {
	:
}

# $1: type of filesystem
# $2: new mount point option
# $3: filesystem of new mount point (used when adding new entry in fstab)
# $4: mount type of new mount point (used when adding new entry in fstab)
function ensure_mount_option_for_vfstype {
        local _vfstype="$1" _new_opt="$2" _filesystem=$3 _type=$4 _vfstype_points=()
        readarray -t _vfstype_points &lt; &lt;(grep -E "[[:space:]]${_vfstype}[[:space:]]" /etc/fstab | awk '{print $2}')

        for _vfstype_point in "${_vfstype_points[@]}"
        do
                ensure_mount_option_in_fstab "$_vfstype_point" "$_new_opt" "$_filesystem" "$_type"
        done
}

# $1: mount point
# $2: new mount point option
# $3: device or virtual string (used when adding new entry in fstab)
# $4: mount type of mount point (used when adding new entry in fstab)
function ensure_mount_option_in_fstab {
	local _mount_point="$1" _new_opt="$2" _device=$3 _type=$4
	local _mount_point_match_regexp="" _previous_mount_opts=""
	_mount_point_match_regexp="$(get_mount_point_regexp "$_mount_point")"

	if [ "$(grep -c "$_mount_point_match_regexp" /etc/fstab)" -eq 0 ]; then
		# runtime opts without some automatic kernel/userspace-added defaults
		_previous_mount_opts=$(grep "$_mount_point_match_regexp" /etc/mtab | head -1 |  awk '{print $4}' \
					| sed -E "s/(rw|defaults|seclabel|${_new_opt})(,|$)//g;s/,$//")
		[ "$_previous_mount_opts" ] &amp;&amp; _previous_mount_opts+=","
		echo "${_device} ${_mount_point} ${_type} defaults,${_previous_mount_opts}${_new_opt} 0 0" &gt;&gt; /etc/fstab
	elif [ "$(grep "$_mount_point_match_regexp" /etc/fstab | grep -c "$_new_opt")" -eq 0 ]; then
		_previous_mount_opts=$(grep "$_mount_point_match_regexp" /etc/fstab | awk '{print $4}')
		sed -i "s|\(${_mount_point_match_regexp}.*${_previous_mount_opts}\)|\1,${_new_opt}|" /etc/fstab
	fi
}

# $1: mount point
function get_mount_point_regexp {
		printf "[[:space:]]%s[[:space:]]" "$1"
}

# $1: mount point
function assert_mount_point_in_fstab {
	local _mount_point_match_regexp
	_mount_point_match_regexp="$(get_mount_point_regexp "$1")"
	grep "$_mount_point_match_regexp" -q /etc/fstab \
		|| { echo "The mount point '$1' is not even in /etc/fstab, so we can't set up mount options" &gt;&amp;2; return 1; }
}

# $1: mount point
function remove_defaults_from_fstab_if_overriden {
	local _mount_point_match_regexp
	_mount_point_match_regexp="$(get_mount_point_regexp "$1")"
	if grep "$_mount_point_match_regexp" /etc/fstab | grep -q "defaults,"
	then
		sed -i "s|\(${_mount_point_match_regexp}.*\)defaults,|\1|" /etc/fstab
	fi
}

# $1: mount point
function ensure_partition_is_mounted {
	local _mount_point="$1"
	mkdir -p "$_mount_point" || return 1
	if mountpoint -q "$_mount_point"; then
		mount -o remount --target "$_mount_point"
	else
		mount --target "$_mount_point"
	fi
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_perform_audit_adjtimex_settimeofday_stime_remediation" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function perform_audit_adjtimex_settimeofday_stime_remediation</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value># Function to fix syscall audit rule for given system call. It is
# based on example audit syscall rule definitions as outlined in
# /usr/share/doc/audit-2.3.7/stig.rules file provided with the audit
# package. It will combine multiple system calls belonging to the same
# syscall group into one audit rule (rather than to create audit rule per
# different system call) to avoid audit infrastructure performance penalty
# in the case of 'one-audit-rule-definition-per-one-system-call'. See:
#
#   https://www.redhat.com/archives/linux-audit/2014-November/msg00009.html
#
# for further details.
#
# Expects five arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules
# * audit rules' pattern		audit rule skeleton for same syscall
# * syscall group			greatest common string this rule shares
# 					with other rules from the same group
# * architecture			architecture this rule is intended for
# * full form of new rule to add	expected full form of audit rule as to be
# 					added into audit.rules file
#
# Note: The 2-th up to 4-th arguments are used to determine how many existing
# audit rules will be inspected for resemblance with the new audit rule
# (5-th argument) the function is going to add. The rule's similarity check
# is performed to optimize audit.rules definition (merge syscalls of the same
# group into one rule) to avoid the "single-syscall-per-audit-rule" performance
# penalty.
#
# Example call:
#
#	See e.g. 'audit_rules_file_deletion_events.sh' remediation script
#
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
	echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

retval=0

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	return 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect+=('/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
	# Extract audit $key from audit rule so we can use it later
	matches=()
	key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)' '|' "$full_rule" : '.*-F[[:space:]]key=\([^[:space:]]\+\)')
	readarray -t matches &lt; &lt;(sed -s -n -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules)
	if [ $? -ne 0 ]
	then
		retval=1
	fi
	for match in "${matches[@]}"
	do
		files_to_inspect+=("${match}")
	done
	# Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
	if [ ${#files_to_inspect[@]} -eq "0" ]
	then
		file_to_inspect="/etc/audit/rules.d/$key.rules"
		files_to_inspect=("$file_to_inspect")
		if [ ! -e "$file_to_inspect" ]
		then
			touch "$file_to_inspect"
			chmod 0640 "$file_to_inspect"
		fi
	fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do
	# Filter existing $audit_file rules' definitions to select those that:
	# * follow the rule pattern, and
	# * meet the hardware architecture requirement, and
	# * are current syscall group specific
	readarray -t existing_rules &lt; &lt;(sed -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file")
	if [ $? -ne 0 ]
	then
		retval=1
	fi

	# Process rules found case-by-case
	for rule in "${existing_rules[@]}"
	do
		# Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
		if [ "${rule}" != "${full_rule}" ]
		then
			# If so, isolate just '(-S \w)+' substring of that rule
			rule_syscalls=$(echo "$rule" | grep -o -P '(-S \w+ )+')
			# Check if list of '-S syscall' arguments of that rule is subset
			# of '-S syscall' list of expected $full_rule
			if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
			then
				# Rule is covered (i.e. the list of -S syscalls for this rule is
				# subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
				# Thus delete the rule from audit.rules &amp; our array
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi
				existing_rules=("${existing_rules[@]//$rule/}")
			else
				# Rule isn't covered by $full_rule - it besides -S syscall arguments
				# for this group contains also -S syscall arguments for other syscall
				# group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
				# since 'lchown' &amp; 'fchownat' share 'chown' substring
				# Therefore:
				# * 1) delete the original rule from audit.rules
				# (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
				# * 2) delete the -S syscall arguments for this syscall group, but
				# keep those not belonging to this syscall group
				# (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
				# * 3) append the modified (filtered) rule again into audit.rules
				# if the same rule not already present
				#
				# 1) Delete the original rule
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi

				# 2) Delete syscalls for this group, but keep those from other groups
				# Convert current rule syscall's string into array splitting by '-S' delimiter
				IFS_BKP="$IFS"
				IFS=$'-S'
				read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
				# Reset IFS back to default
				IFS="$IFS_BKP"
				# Splitting by "-S" can't be replaced by the readarray functionality easily

				# Declare new empty string to hold '-S syscall' arguments from other groups
				new_syscalls_for_rule=''
				# Walk through existing '-S syscall' arguments
				for syscall_arg in "${rule_syscalls_as_array[@]}"
				do
					# Skip empty $syscall_arg values
					if [ "$syscall_arg" == '' ]
					then
						continue
					fi
					# If the '-S syscall' doesn't belong to current group add it to the new list
					# (together with adding '-S' delimiter back for each of such item found)
					if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
					then
						new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
					fi
				done
				# Replace original '-S syscall' list with the new one for this rule
				updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
				# Squeeze repeated whitespace characters in rule definition (if any) into one
				updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
				# 3) Append the modified / filtered rule again into audit.rules
				#    (but only in case it's not present yet to prevent duplicate definitions)
				if ! grep -q -- "$updated_rule" "$audit_file"
				then
					echo "$updated_rule" &gt;&gt; "$audit_file"
				fi
			fi
		else
			# $audit_file already contains the expected rule form for this
			# architecture &amp; key =&gt; don't insert it second time
			append_expected_rule=1
		fi
	done

	# We deleted all rules that were subset of the expected one for this arch &amp; key.
	# Also isolated rules containing system calls not from this system calls group.
	# Now append the expected rule if it's not present in $audit_file yet
	if [[ ${append_expected_rule} -eq "0" ]]
	then
		echo "$full_rule" &gt;&gt; "$audit_file"
	fi
done

return $retval

}


# Function to perform remediation for the 'adjtimex', 'settimeofday', and 'stime' audit
# system calls on RHEL, Fedora or OL systems.
# Remediation performed for both possible tools: 'auditctl' and 'augenrules'.
#
# Note: 'stime' system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
# therefore excluded from the list of time group system calls to be audited on this arch
#
# Example Call:
#
#      perform_audit_adjtimex_settimeofday_stime_remediation
#
function perform_audit_adjtimex_settimeofday_stime_remediation {

# Retrieve hardware architecture of the underlying system
[ "$(getconf LONG_BIT)" = "32" ] &amp;&amp; RULE_ARCHS=("b32") || RULE_ARCHS=("b32" "b64")

for ARCH in "${RULE_ARCHS[@]}"
do

	PATTERN="-a always,exit -F arch=${ARCH} -S .* -k *"
	# Create expected audit group and audit rule form for particular system call &amp; architecture
	if [ ${ARCH} = "b32" ]
	then
		# stime system call is known at 32-bit arch (see e.g "$ ausyscall i386 stime" 's output)
		# so append it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\|stime\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -S stime -k audit_time_rules"
	elif [ ${ARCH} = "b64" ]
	then
		# stime system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
		# therefore don't add it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -k audit_time_rules"
	fi
	# Perform the remediation for both possible tools: 'auditctl' and 'augenrules'
	fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
	fix_audit_syscall_rule "augenrules" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
done

}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_perform_audit_rules_privileged_commands_remediation" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function perform_audit_rules_privileged_commands_remediation</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value># Function to perform remediation for 'audit_rules_privileged_commands' rule
#
# Expects two arguments:
#
# audit_tool		tool used to load audit rules
# 			One of 'auditctl' or 'augenrules'
#
# min_auid		Minimum original ID the user logged in with
#
# Example Call(s):
#
#      perform_audit_rules_privileged_commands_remediation "auditctl" "500"
#      perform_audit_rules_privileged_commands_remediation "augenrules"	"1000"
#
function perform_audit_rules_privileged_commands_remediation {
#
# Load function arguments into local variables
local tool="$1"
local min_auid="$2"

# Check sanity of the input
if [ $# -ne "2" ]
then
	echo "Usage: perform_audit_rules_privileged_commands_remediation 'auditctl | augenrules' '500 | 1000'"
	echo "Aborting."
	exit 1
fi

declare -a files_to_inspect=()

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If the audit tool is 'auditctl', then:
# * add '/etc/audit/audit.rules'to the list of files to be inspected,
# * specify '/etc/audit/audit.rules' as the output audit file, where
#   missing rules should be inserted
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect=("/etc/audit/audit.rules")
	output_audit_file="/etc/audit/audit.rules"
#
# If the audit tool is 'augenrules', then:
# * add '/etc/audit/rules.d/*.rules' to the list of files to be inspected
#   (split by newline),
# * specify /etc/audit/rules.d/privileged.rules' as the output file, where
#   missing rules should be inserted
elif [ "$tool" == 'augenrules' ]
then
	readarray -t files_to_inspect &lt; &lt;(find /etc/audit/rules.d -maxdepth 1 -type f -name '*.rules' -print)
	output_audit_file="/etc/audit/rules.d/privileged.rules"
fi

# Obtain the list of SUID/SGID binaries on the particular system (split by newline)
# into privileged_binaries array
privileged_binaries=()
readarray -t privileged_binaries &lt; &lt;(find / -not \( -fstype afs -o -fstype ceph -o -fstype cifs -o -fstype smb3 -o -fstype smbfs -o -fstype sshfs -o -fstype ncpfs -o -fstype ncp -o -fstype nfs -o -fstype nfs4 -o -fstype gfs -o -fstype gfs2 -o -fstype glusterfs -o -fstype gpfs -o -fstype pvfs2 -o -fstype ocfs2 -o -fstype lustre -o -fstype davfs -o -fstype fuse.sshfs \) -type f \( -perm -4000 -o -perm -2000 \) 2&gt; /dev/null)

# Keep list of SUID/SGID binaries that have been already handled within some previous iteration
declare -a sbinaries_to_skip=()

# For each found sbinary in privileged_binaries list
for sbinary in "${privileged_binaries[@]}"
do

	# Check if this sbinary wasn't already handled in some of the previous sbinary iterations
	# Return match only if whole sbinary definition matched (not in the case just prefix matched!!!)
	if [[ $(sed -ne "\|${sbinary}|p" &lt;&lt;&lt; "${sbinaries_to_skip[*]}") ]]
	then
		# If so, don't process it second time &amp; go to process next sbinary
		continue
	fi

	# Reset the counter of inspected files when starting to check
	# presence of existing audit rule for new sbinary
	local count_of_inspected_files=0

	# Define expected rule form for this binary
	expected_rule="-a always,exit -F path=${sbinary} -F auid&gt;=${min_auid} -F auid!=unset -F key=privileged"

	# If list of audit rules files to be inspected is empty, just add new rule and move on to next binary
	if [[ ${#files_to_inspect[@]} -eq 0 ]]; then
		echo "$expected_rule" &gt;&gt; "$output_audit_file"
		continue
	fi

	# Replace possible slash '/' character in sbinary definition so we could use it in sed expressions below
	sbinary_esc=${sbinary//$'/'/$'\/'}

	# For each audit rules file from the list of files to be inspected
	for afile in "${files_to_inspect[@]}"
	do

		# Search current audit rules file's content for match. Match criteria:
		# * existing rule is for the same SUID/SGID binary we are currently processing (but
		#   can contain multiple -F path= elements covering multiple SUID/SGID binaries)
		# * existing rule contains all arguments from expected rule form (though can contain
		#   them in arbitrary order)
	
		base_search=$(sed -e '/-a always,exit/!d' -e '/-F path='"${sbinary_esc}"'[^[:graph:]]/!d'		\
				-e '/-F path=[^[:space:]]\+/!d'						\
				-e '/-F auid&gt;='"${min_auid}"'/!d' -e '/-F auid!=\(4294967295\|unset\)/!d'	\
				-e '/-k \|-F key=/!d' "$afile")

		# Increase the count of inspected files for this sbinary
		count_of_inspected_files=$((count_of_inspected_files + 1))


		# Search current audit rules file's content for presence of rule pattern for this sbinary
		if [[ $base_search ]]
		then

			# Current audit rules file already contains rule for this binary =&gt;
			# Store the exact form of found rule for this binary for further processing
			concrete_rule=$base_search

			# Select all other SUID/SGID binaries possibly also present in the found rule

			readarray -t handled_sbinaries &lt; &lt;(grep -o -e "-F path=[^[:space:]]\+" &lt;&lt;&lt; "$concrete_rule")
			handled_sbinaries=("${handled_sbinaries[@]//-F path=/}")

			# Merge the list of such SUID/SGID binaries found in this iteration with global list ignoring duplicates
			readarray -t sbinaries_to_skip &lt; &lt;(for i in "${sbinaries_to_skip[@]}" "${handled_sbinaries[@]}"; do echo "$i"; done | sort -du)

			# if there is a -F perm flag, remove it
			if grep -q '.*-F\s\+perm=[rwxa]\+.*' &lt;&lt;&lt; "$concrete_rule"; then

				# Separate concrete_rule into three sections using hash '#'
				# sign as a delimiter around rule's permission section borders
				# note that the trailing space after perm flag is captured because there would be 
				# two consecutive spaces after joining remaining parts of the rule together
				concrete_rule="$(echo "$concrete_rule" | sed -n "s/\(.*\)\+\(-F perm=[rwax]\+\ \?\)\+/\1#\2#/p")"

				# Split concrete_rule into head, perm, and tail sections using hash '#' delimiter
				rule_head=$(cut -d '#' -f 1 &lt;&lt;&lt; "$concrete_rule")
				rule_perm=$(cut -d '#' -f 2 &lt;&lt;&lt; "$concrete_rule")
				rule_tail=$(cut -d '#' -f 3 &lt;&lt;&lt; "$concrete_rule")

				# Remove permissions section from existing rule in the file
				sed -i "s#${rule_head}\(.*\)${rule_tail}#${rule_head}${rule_tail}#" "$afile"
			fi
		# If the required audit rule for particular sbinary wasn't found yet, insert it under following conditions:
		#
		# * in the "auditctl" mode of operation insert particular rule each time
		#   (because in this mode there's only one file -- /etc/audit/audit.rules to be inspected for presence of this rule),
		#
		# * in the "augenrules" mode of operation insert particular rule only once and only in case we have already
		#   searched all of the files from /etc/audit/rules.d/*.rules location (since that audit rule can be defined
		#   in any of those files and if not, we want it to be inserted only once into /etc/audit/rules.d/privileged.rules file)
		#
		elif [ "$tool" == "auditctl" ] || [[ "$tool" == "augenrules" &amp;&amp; $count_of_inspected_files -eq "${#files_to_inspect[@]}" ]]
		then

			# Check if this sbinary wasn't already handled in some of the previous afile iterations
			# Return match only if whole sbinary definition matched (not in the case just prefix matched!!!)
			if [[ ! $(sed -ne "\|${sbinary}|p" &lt;&lt;&lt; "${sbinaries_to_skip[*]}") ]]
			then
				# Current audit rules file's content doesn't contain expected rule for this
				# SUID/SGID binary yet =&gt; append it
				echo "$expected_rule" &gt;&gt; "$output_audit_file"
			fi

			continue
		fi

	done

done
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_populate" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function populate</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value># The populate function isn't directly used by SSG at the moment but it can be 
# used for testing purposes and will be used in SSG Testsuite in the future.

function populate {
# code to populate environment variables needed (for unit testing)
if [ -z "${!1}" ]; then
	echo "$1 is not defined. Exiting."
	exit
fi
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_replace_or_append" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function replace_or_append</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value># Function to replace configuration setting in config file or add the configuration setting if
# it does not exist.
#
# Expects arguments:
#
# config_file:		Configuration file that will be modified
# key:			Configuration option to change
# value:		Value of the configuration option to change
# cce:			The CCE identifier or '@CCENUM@' if no CCE identifier exists
# format:		The printf-like format string that will be given stripped key and value as arguments,
#			so e.g. '%s=%s' will result in key=value subsitution (i.e. without spaces around =)
#
# Optional arugments:
#
# format:		Optional argument to specify the format of how key/value should be
# 			modified/appended in the configuration file. The default is key = value.
#
# Example Call(s):
#
#     With default format of 'key = value':
#     replace_or_append '/etc/sysctl.conf' '^kernel.randomize_va_space' '2' '@CCENUM@'
#
#     With custom key/value format:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' 'disabled' '@CCENUM@' '%s=%s'
#
#     With a variable:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' $var_selinux_state '@CCENUM@' '%s=%s'
#
function replace_or_append {
  local default_format='%s = %s' case_insensitive_mode=yes sed_case_insensitive_option='' grep_case_insensitive_option=''
  local config_file=$1
  local key=$2
  local value=$3
  local cce=$4
  local format=$5

  if [ "$case_insensitive_mode" = yes ]; then
    sed_case_insensitive_option="i"
    grep_case_insensitive_option="-i"
  fi
  [ -n "$format" ] || format="$default_format"
  # Check sanity of the input
  [ $# -ge "3" ] || { echo "Usage: replace_or_append &lt;config_file_location&gt; &lt;key_to_search&gt; &lt;new_value&gt; [&lt;CCE number or literal '@CCENUM@' if unknown&gt;] [printf-like format, default is '$default_format']" &gt;&amp;2; exit 1; }

  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.
  # Otherwise, regular sed command will do.
  sed_command=('sed' '-i')
  if test -L "$config_file"; then
    sed_command+=('--follow-symlinks')
  fi

  # Test that the cce arg is not empty or does not equal @CCENUM@.
  # If @CCENUM@ exists, it means that there is no CCE assigned.
  if [ -n "$cce" ] &amp;&amp; [ "$cce" != '@CCENUM@' ]; then
    cce="${cce}"
  else
    cce="CCE"
  fi

  # Strip any search characters in the key arg so that the key can be replaced without
  # adding any search characters to the config file.
  stripped_key=$(sed 's/[\^=\$,;+]*//g' &lt;&lt;&lt; "$key")

  # shellcheck disable=SC2059
  printf -v formatted_output "$format" "$stripped_key" "$value"

  # If the key exists, change it. Otherwise, add it to the config_file.
  # We search for the key string followed by a word boundary (matched by \&gt;),
  # so if we search for 'setting', 'setting2' won't match.
  if LC_ALL=C grep -q -m 1 $grep_case_insensitive_option -e "${key}\\&gt;" "$config_file"; then
    "${sed_command[@]}" "s/${key}\\&gt;.*/$formatted_output/g$sed_case_insensitive_option" "$config_file"
  else
    # \n is precaution for case where file ends without trailing newline
    printf '\n# Per %s: Set %s in %s\n' "$cce" "$formatted_output" "$config_file" &gt;&gt; "$config_file"
    printf '%s\n' "$formatted_output" &gt;&gt; "$config_file"
  fi
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
        <xccdf-1.2:Value id="xccdf_org.ssgproject.content_value_function_set_faillock_option_to_value_in_pam_file" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <xccdf-1.2:title xml:lang="en-US">Remediation function set_faillock_option_to_value_in_pam_file</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</xccdf-1.2:description>
          <xccdf-1.2:value>function set_faillock_option_to_value_in_pam_file {
	# If invoked with no arguments, exit. This is an intentional behavior.
	[ $# -gt 1 ] || return 0
	[ $# -ge 3 ] || die "$0 requires exactly zero, three, or four arguments"
	[ $# -le 4 ] || die "$0 requires exactly zero, three, or four arguments"
	local _pamFile="$1" _option="$2" _value="$3" _insert_lines_callback="$4"
	# pam_faillock.so already present?
	if grep -q "^auth.*pam_faillock.so.*" "$_pamFile"; then

		# pam_faillock.so present, is the option present?
		if grep -q "^auth.*[default=die].*pam_faillock.so.*authfail.*$_option=" "$_pamFile"; then

			# both pam_faillock.so &amp; option present, just correct option to the right value
			sed -i --follow-symlinks "s/\(^auth.*required.*pam_faillock.so.*preauth.*silent.*\)\($_option *= *\).*/\1\2$_value/" "$_pamFile"
			sed -i --follow-symlinks "s/\(^auth.*[default=die].*pam_faillock.so.*authfail.*\)\($_option *= *\).*/\1\2$_value/" "$_pamFile"

		# pam_faillock.so present, but the option not yet
		else

			# append correct option value to appropriate places
			sed -i --follow-symlinks "/^auth.*required.*pam_faillock.so.*preauth.*silent.*/ s/$/ $_option=$_value/" "$_pamFile"
			sed -i --follow-symlinks "/^auth.*[default=die].*pam_faillock.so.*authfail.*/ s/$/ $_option=$_value/" "$_pamFile"
		fi

	# pam_faillock.so not present yet
	else
		test -z "$_insert_lines_callback" || "$_insert_lines_callback" "$_option" "$_value" "$_pamFile"
		# insert pam_faillock.so preauth &amp; authfail rows with proper value of the option in question
	fi
}</xccdf-1.2:value>
        </xccdf-1.2:Value>
      </xccdf-1.2:Group>
      <xccdf-1.2:Group id="xccdf_org.ssgproject.content_group_vsel">
        <xccdf-1.2:title xml:lang="en-US">McAfee VirusScan Enterprise for Linux (VSEL)</xccdf-1.2:title>
        <xccdf-1.2:description xml:lang="en-US">The McAfee VirusScan Enterprise for Linux software provides a realtime virus scanner for Linux systems.</xccdf-1.2:description>
        <xccdf-1.2:Group id="xccdf_org.ssgproject.content_group_general_settings">
          <xccdf-1.2:title xml:lang="en-US">General VSEL Settings</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">To support a secured and compliant configuration, a number of 
settings need to be modified from their default configuration and locked so 
that they are prevented from being changed.</xccdf-1.2:description>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_dats_auto_update" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x must be configured to receive automatic updates</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Anti-virus signature files are updated almost daily by anti-virus software vendors. These files are made available to anti-virus 
clients as they are published. Keeping virus signature files as current as possible is vital to the security of any system.

To check that anti-virus signature files are updated, you have to login to the VSEL Web Monitor.
In the VSEL WEB Monitor, under <html:code>View</html:code>, select <html:code>Scheduled Tasks</html:code>.
Under <html:code>Scheduled Tasks</html:code>, under <html:code>Task Summaries</html:code>, with the assistance of the McAfee VSEL SA, identify the VirusScan DAT update task.
Verify the <html:code>Type</html:code> is <html:code>Update</html:code> and the <html:code>Status</html:code> is <html:code>Completed</html:code> with Results of <html:code>Update Finished</html:code>.
Under <html:code>Task Details</html:code> for the task, click on the <html:code>Modify</html:code> button.
Choose <html:code>2. Choose what to update</html:code> and verify the <html:code>Virus definition files (also known as DAT files)</html:code> is selected.    </xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-002</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">The anti-virus software product must be configured to receive those updates automatically in order to afford the expected protection.</xccdf-1.2:rationale>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-dats_auto_update_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_dats_updated" selected="false" role="full" severity="high">
            <xccdf-1.2:title xml:lang="en-US">The anti-virus signature file age must not exceed 7 days</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Anti-virus signature files are updated almost daily by anti-virus software vendors. These files are made available to anti-virus 
clients as they are published. Keeping virus signature files as current as possible is vital to the security of any system.

To check that anti-virus signature files are updated, you have to login to the VSEL Web Monitor.
In the VSEL WEB Monitor, under <html:code>View</html:code>, select <html:code>Host Summary</html:code>.
In the <html:code>Host Summary</html:code>, verify the <html:code>DAT Date:</html:code> is within the last 7 days.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001240</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000276</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-001</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By configuring a system to attempt an anti-virus update on a daily basis, the system is ensured of maintaining an anti-virus signature 
age of 7 days or less. If the update attempt were to be configured for only once a week, and that attempt failed, the system would be 
immediately out of date.</xccdf-1.2:rationale>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-dats_updated_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_restricted_user" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The nails user and nailsgroup group must be restricted to the least privilege access required for the intended role</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">The McAfee VirusScan Enterprise for Linux software runs its processes under the nails user, which is part of the nailsgroup group. 
The WEB GUI is also accessed using the nails user. 

To check that nails and nailsgroup are configured correctly, access the Linux system console command line as root.
Execute the following commands. This command will pipe the results to text files for easier review. 

<html:code>find / -group nailsgroup &gt;nailsgroup.txt</html:code>
<html:code>find / -user nails &gt;nails.txt</html:code>

Execute the following commands to individually review each of the text files of results, pressing space bar to move to each page 
until the end of the exported text. 

<html:code>more nailsgroup.txt</html:code>
<html:code>more nails.txt</html:code>

When reviewing the results, verify the nailsgroup group and nails user only own the following paths.
The following paths assume an INSTALLDIR of <html:code>/opt/NAI/LinuxShield</html:code> and a RUNTIMEDIR of <html:code>/var/opt/NAI/LinuxShield</html:code>. 
If alternative folders were used, replace the following paths accordingly when validating.

<html:code>/var/opt/NAI</html:code> and sub-folders
<html:code>/opt/NAI</html:code> and sub-folders
<html:code>/McAfee/lib</html:code>
<html:code>/var/spool/mail/nails</html:code>
<html:code>/proc/#####</html:code> (where ##### represents the various process IDs for the VSEL processes.)

If any other folder is owned by either the nailsgroup group or the nails user, this is a finding.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-002235</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">AC-6(10)</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000340</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-202</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Ensuring the nails user/nailsgroup group only has access to the required functions necessary for its 
intended role will mitigate the possibility of the nails user/nailsgroup group from being used to perform malicious destruction to the 
system in the event of a compromise.</xccdf-1.2:rationale>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_scanned_media" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x must scan all media used for system maintenance prior to use</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">It is imperative to protect Linux systems from malware introduced from removable media by ensuring they are scanned before use.

Consult with the System Administrator of the Linux system being reviewed.

Verify procedures are documented which require the manual scanning of all media used for system maintenance before media is used.

If a procedure is not documented requiring the manual scanning of all media used for system maintenance before media is used, 
this is a finding.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-000870</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">MA-3(2)</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000073</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-200</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Removable media such as CD/DVDs allow a path for malware to be introduced to a Linux System.</xccdf-1.2:rationale>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_updates_source" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise must be configured to receive all patches, service packs and updates from a DoD-managed source</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Anti-virus signature files are updated almost daily by anti-virus software vendors. 
These files are made available to anti-virus clients as they are published. 
Keeping virus signature files as current as possible is vital to the security of any system. 
The anti-virus software product must be configured to receive those updates automatically in order to afford the expected protection.

To check that VSEL settings are configured correctly, connect to the McAfee VirusScan Enterprise for Linux (VSEL) Monitor (WEB interface) 
of the Linux system being reviewed from a desktop browser window and logon with the nails user account.

In the VSEL WEB Monitor, under <html:code>Configure</html:code>, select <html:code>Repositories</html:code>.
Under <html:code>Repository List</html:code>, verify all repositories listed point to a local or DoD-managed repository.

If all repositories listed do not point to local or DoD-managed repository, this is a finding.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001749</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">CM-5</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000131</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-201</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">While obtaining updates, patches, service packs and updates from the vendor are timelier, 
the possibility of corruption or malware being introduced to the system is higher. 
By obtaining these from an official DoD source and/or downloading them to a separate system 
first and validating them before making them available to systems, the possibility of 
malware being introduced is mitigated.</xccdf-1.2:rationale>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_virus_notification" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">A notification mechanism or process must be in place to notify Administrators of out of date DAT, detected malware and error codes</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Failure of anti-virus signature updates will eventually render the software to be useless in protecting the Linux system from malware. 

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>notifications.virusDetected.active: true</html:code>,
Administrators will be notified of events detected.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001240</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000276</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-205</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Administration notification for failed updates, via SMTP, will ensure timely remediation of errors causing DATs to not be updated.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="virus_notification" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^notifications.virusDetected.active' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-virus_notification:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-virus_notification_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_web_client_disabled" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux Web interface must be disabled unless the system is on a segregated network</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">The McAfee VirusScan Enterprise for Linux WEB GUI is the method for configuring the McAfee VSEL on a non-managed Linux system. 
The WEB GUI on the system could be used maliciously to gain unauthorized access to the system. 

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.disableCltWebUI: true</html:code>,
the WEB GUI will be disabled by default.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001813</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">CM-5(1)</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000380</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-000</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By restricting access to interface by implementing firewall rules, the risk of unauthorized access will be mitigated.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="web_client_disabled" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.disableCltWebUI' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-web_client_disabled:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-web_client_disabled_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_web_client_firewalled" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">Access to the McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x Web UI must be enforced by firewall rules</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">The McAfee VirusScan Enterprise for Linux WEB GUI is the method for configuring the McAfee VSEL on a non-managed Linux system. 
The WEB GUI on the system could be used maliciously to gain unauthorized access to the system. 

To check that the WEB GUI is restricted, review the iptables configuration and confirm that access is restricted to authorized hosts</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001813</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">CM-5</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000380</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-301</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By restricting access to interface by implementing firewall rules, the risk of unauthorized access will be mitigated.</xccdf-1.2:rationale>
          </xccdf-1.2:Rule>
        </xccdf-1.2:Group>
        <xccdf-1.2:Group id="xccdf_org.ssgproject.content_group_on_access_settings">
          <xccdf-1.2:title xml:lang="en-US">On Access VSEL Settings</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">This section defines the settings required for on access scans.</xccdf-1.2:description>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_action_app_primary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Clean as first action when a virus or Trojan is detected</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware may have infected a file that is necessary to the user. By configuring the anti-virus software to first attempt cleaning the infected file, availability to the file is not sacrificed. 
If a cleaning attempt is not successful, however, deleting the file is the only safe option to ensure the malware is not introduced onto the system or network.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.action.App.primary: Clean</html:code>,
files will attempted to be cleaned first, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-013</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Malware may have infected a file that is necessary to the user.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_action_app_primary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.action.App.primary' 'Clean' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_action_app_primary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_action_app_primary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_action_app_secondary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Quarantine if first action fails when a virus or Trojan is detected</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware may have infected a file that is necessary to the user. By configuring the anti-virus software to first attempt cleaning the infected file, availability to the file is not sacrificed. 
If a cleaning attempt is not successful, however, quarantining the file is the only safe option to ensure the malware is not introduced onto the system or network.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.action.App.secondary: Quarantine</html:code>,
files that cannot be cleaned will be quarantined, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-014</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Malware may have infected a file that is necessary to the user.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_action_app_secondary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.action.App.secondary' 'Quarantine' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_action_app_secondary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_action_app_secondary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_action_default_primary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Clean as first action when programs and jokes are found</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Potentially Unwanted Programs (PUPs) include Spyware, Adware, Remote Administration Tools, Dialers, Password Crackers, Jokes, and Key Loggers. 
While PUPs do not typically have any infection capability on their own, they rely on malware or other attach mechanisms to be installed onto target hosts, 
after which they will collect and transfer data from the host to an external host and/or will be used as attach mechanisms.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.action.Default.primary: Clean</html:code>,
programs/jokes will attempted to be cleaned first, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-015</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Configuring the anti-virus software to attempt to clean the file first will allow for the possibility of a false positive. 
In most cases, however, the secondary action of delete will be used, mitigating the risk of the PUPs being installed and used maliciously.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_action_default_primary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.action.Default.primary' 'Clean' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_action_default_primary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_action_default_primary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_action_default_secondary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to Quarantine if first action fails when programs and jokes are found</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware may have infected a file that is necessary to the user. By configuring the anti-virus software to first attempt cleaning the infected file, availability to the file is not sacrificed. 
If a cleaning attempt is not successful, however, quarantining the file is the only safe option to ensure the malware is not introduced onto the system or network.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.action.Default.secondary: Quarantine</html:code>,
programs/jokes that cannot be cleaned will be quarantined, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-016</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Malware may have infected a file that is necessary to the user.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_action_default_secondary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.action.Default.secondary' 'Quarantine' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_action_default_secondary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_action_default_secondary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_action_error" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to deny access to the file if an error occurs during scanning</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Anti-virus software is the most commonly used technical control for malware threat mitigation.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.action.error: Block</html:code>,
any file resulting in an error reading the file will be blocked.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-017</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Real-time scanning of files as they are read from disk is a crucial first line of defense from malware attacks.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_action_error" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.action.error' 'Block' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_action_error:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_action_error_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_action_timeout" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to allow access to files if scanning times out</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Anti-virus software is the most commonly used technical control for malware threat mitigation.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.action.timeout: Pass</html:code>,
any file resulting in a timeout reading the file will be passed.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-018</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Real-time scanning of files as they are read from disk is a crucial first line of defense from malware attacks.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_action_timeout" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.action.timeout' 'Pass' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_action_timeout:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_action_timeout_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_allFiles" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to scan all file types</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">When scanning for malware, excluding specific file types will increase the risk of a malware-infected file going undetected.  

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.allFiles: true</html:code>,
all file types will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-010</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By configuring anti-virus software to scan all file types, the scanner has a higher success rate at detecting and eradicating malware.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_allFiles" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.allFiles' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_allFiles:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_allFiles_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_decompArchive" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to decompress archives when scanning</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware can be hidden within archived files and passed from system to system undetected unless the archive is decompressed and each file scanned. 
By disabling the archive scanning capability, archives such as .tar and .tgz files will not be decompressed and any infected files in the archives would go undetected. 

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.decompArchive: true</html:code>,
compressed archives will be decompressed before being scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-004</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Decompression can slow performance, however; any virus-infected file inside an archive cannot become active until it has been extracted.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_decompArchive" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.decompArchive' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_decompArchive:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_decompArchive_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_enabled" selected="false" role="full" severity="high">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x must be configured to enable On-Access scanning</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">For anti-virus software to be effective, it must be running at all times, beginning from the point of the system's initial startup. 
Otherwise, the risk is greater for viruses, Trojans, and other malware infecting the system during that startup phase.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.oasEnabled: true</html:code>,
the antivirus software will be running at initial startup of the system.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-003</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">For anti-virus software to be effective, it must be running at all times, beginning from the point of the system's initial startup.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_enabled" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.oasEnabled' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_enabled:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_enabled_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_exclusions" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must only be configured with exclusions that are documented and approved by the ISSO/ISSM/AO</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">When scanning for malware, excluding specific files will increase the risk of a malware-infected file going undetected.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.filter.varlog.type: exclude-path</html:code>, and the line <html:code>nailsd.profile.OAS.filter.varlog.path: /var/log</html:code>
no unapproved exclusions are defined.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-012</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By configuring anti-virus software without any exclusions, the scanner has a higher success rate at detecting and eradicating malware. </xccdf-1.2:rationale>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_exclusions_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_heuristicAnalysis" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to find unknown program viruses</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Due to the ability of malware to mutate after infection, standard anti-virus signatures may not be able to catch new strains or variants of the malware. 
Typically, these strains and variants will share unique characteristics with others in their virus family.  

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.heuristicAnalysis: true</html:code>,
unknown virus programs will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-005</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By using a generic signature to detect the shared characteristics, using wildcards where differences lie, the generic signature can detect viruses 
even if they are padded with extra, meaningless code. This method of detection is Heuristic detection.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_heuristicAnalysis" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.heuristicAnalysis' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_heuristicAnalysis:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_heuristicAnalysis_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_macroAnalysis" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to find unknown macro viruses</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Interpreted viruses are executed by an application. Within this subcategory, macro viruses take advantage of the capabilities of 
applications' macro programming language to infect application documents and document templates, while scripting viruses infect 
scripts that are understood by scripting languages processed by services on the OS.  

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.macroAnalysis: true</html:code>,
unknown macro viruses will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-006</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Many attackers use toolkits containing several different types of utilities and scripts that can be used to probe and attack hosts.
Scanning for unknown macro viruses will mitigate zero-day attacks.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_macroAnalysis" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.macroAnalysis' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_macroAnalysis:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_macroAnalysis_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_program" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to find potentially unwanted programs</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Potentially Unwanted Programs (PUPs) include Spyware, Adware, Remote Administration Tools, Dialers, Password Crackers, Jokes, and Key Loggers. 
While PUPs do not typically have any infection capability on their own, they rely on malware or other attach mechanisms to be installed onto target hosts, 
after which they will collect and transfer data from the host to an external host and/or will be used as attach mechanisms.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.program: true</html:code>,
potentially unwanted programs will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-007</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Configuring the anti-virus software to attempt to clean the file first will allow for the possibility of a false positive. 
In most cases, however, the secondary action of delete will be used, mitigating the risk of the PUPs being installed and used maliciously.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_program" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.program' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_program:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_program_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_scanMaxTmo" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner maximum scan time must not be less than 45 seconds</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">When anti-virus software is not configured to limit the amount of time spent trying to scan a file, the total effectiveness of 
the anti-virus software, and performance on the system being scanned, will be degraded. By limiting the amount of time the anti-virus 
software uses when scanning a file, the scan will be able to complete in a timely manner.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.scanMaxTmo: 45</html:code>,
a scan will not timeout in less than 45 seconds of scanning a file.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-010</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Although the description of this requirement indicates a "maximum scan time", the intent of this requirement is to explicitly set a 
maximum scan time without impacting the effectiveness of the scan. Left unconfigured, the scan could run indefinitely on one file. 
If configured with a value of less than 45 seconds, the scanning of some files will be skipped. If configured with 45 or more seconds, 
the success rate of files being completely scanned is higher.  </xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_scanMaxTmo" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.scanMaxTmo' '45' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_scanMaxTmo:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_scanMaxTmo_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_scanNWFiles" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be enabled to scan mounted volumes when mounted volumes point to a network server without an anti-virus solution installed</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">It is imperative to protect Linux systems from malware introduced from those other network systems by either ensuring the remote systems are protected or by scanning files from those systems when they are accessed.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.scanNWFiles: true</html:code>,
files on network mounts are scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001242</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000278</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-019</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Mounting network volumes to other network systems introduces a path for malware to be introduced. </xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_scanNWFiles" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.scanNWFiles' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_scanNWFiles:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_scanNWFiles_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_scanOnRead" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to scan files when being read from disk</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Anti-virus software is the most commonly used technical control for malware threat mitigation. 

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.scanOnRead: true</html:code>,
files will be scanned when read from disk.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-009</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Real-time scanning of files as they are read from disk is a crucial first line of defense from malware attacks.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_scanOnRead" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.scanOnRead' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_scanOnRead:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_scanOnRead_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_oas_scanOnWrite" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Access scanner must be configured to scan files when being written to disk</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Anti-virus software is the most commonly used technical control for malware threat mitigation. 

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/nailsd.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.OAS.scanOnWrite: true</html:code>,
files will be scanned when written to disk.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001243</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000279</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-008</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Real-time scanning of files as they are written to disk is a crucial first line of defense from malware attacks.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="oas_scanOnWrite" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/nailsd.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.OAS.scanOnWrite' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-oas_scanOnWrite:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-oas_scanOnWrite_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
        </xccdf-1.2:Group>
        <xccdf-1.2:Group id="xccdf_org.ssgproject.content_group_on_demand_settings">
          <xccdf-1.2:title xml:lang="en-US">On Demand VSEL Settings</xccdf-1.2:title>
          <xccdf-1.2:description xml:lang="en-US">This section defines the settings required for on demand scans.</xccdf-1.2:description>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_action_app_primary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Clean as first action when a virus or Trojan is detected</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware may have infected a file that is necessary to the user. By configuring the anti-virus software to first attempt cleaning the infected file, availability to the file is not sacrificed. 
If a cleaning attempt is not successful, however, deleting the file is the only safe option to ensure the malware is not introduced onto the system or network.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.action.App.primary: Clean</html:code>,
files will attempted to be cleaned first, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-106</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Malware may have infected a file that is necessary to the user.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_action_app_primary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.action.App.primary' 'Clean' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_action_app_primary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_action_app_primary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_action_app_secondary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Quarantine if first action fails when a virus or Trojan is detected</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware may have infected a file that is necessary to the user. By configuring the anti-virus software to first attempt cleaning the infected file, availability to the file is not sacrificed. 
If a cleaning attempt is not successful, however, quarantining the file is the only safe option to ensure the malware is not introduced onto the system or network.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.action.App.secondary: Quarantine</html:code>,
files that cannot be cleaned will be quarantined, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-107</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Malware may have infected a file that is necessary to the user.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_action_app_secondary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.action.App.secondary' 'Quarantine' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_action_app_secondary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_action_app_secondary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_action_default_primary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Clean as first action when programs and jokes are found</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Potentially Unwanted Programs (PUPs) include Spyware, Adware, Remote Administration Tools, Dialers, Password Crackers, Jokes, and Key Loggers. 
While PUPs do not typically have any infection capability on their own, they rely on malware or other attach mechanisms to be installed onto target hosts, 
after which they will collect and transfer data from the host to an external host and/or will be used as attach mechanisms.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.action.Default.primary: Clean</html:code>,
programs/jokes will attempted to be cleaned first, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-110</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Configuring the anti-virus software to attempt to clean the file first will allow for the possibility of a false positive. 
In most cases, however, the secondary action of delete will be used, mitigating the risk of the PUPs being installed and used maliciously.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_action_default_primary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.action.Default.primary' 'Clean' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_action_default_primary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_action_default_primary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_action_default_secondary" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to Quarantine if first action fails when programs and jokes are found</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware may have infected a file that is necessary to the user. By configuring the anti-virus software to first attempt cleaning the infected file, availability to the file is not sacrificed. 
If a cleaning attempt is not successful, however, quarantining the file is the only safe option to ensure the malware is not introduced onto the system or network.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.action.Default.secondary: Quarantine</html:code>,
programs/jokes that cannot be cleaned will be quarantined, preserving the file data.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-111</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Malware may have infected a file that is necessary to the user.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_action_default_secondary" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.action.Default.secondary' 'Quarantine' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_action_default_secondary:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_action_default_secondary_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_allFiles" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to scan all file types</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">When scanning for malware, excluding specific file types will increase the risk of a malware-infected file going undetected.  

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.allFiles: true</html:code>,
all file types will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-105</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By configuring anti-virus software to scan all file types, the scanner has a higher success rate at detecting and eradicating malware.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_allFiles" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.allFiles' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_allFiles:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_allFiles_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_decompArchive" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to decompress archives when scanning</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware can be hidden within archived files and passed from system to system undetected unless the archive is decompressed and each file scanned. 
By disabling the archive scanning capability, archives such as .tar and .tgz files will not be decompressed and any infected files in the archives would go undetected. 

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.decompArchive: true</html:code>,
compressed archives will be decompressed before being scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-101</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Decompression can slow performance, however; any virus-infected file inside an archive cannot become active until it has been extracted.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_decompArchive" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.decompArchive' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_decompArchive:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_decompArchive_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_enabled" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x must be configured to run a scheduled On-Demand scan at least once a week</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Real-time scanning of files as they are read from disk is a crucial first line of defense from malware attacks but to ensure all files 
are frequently scanned, a regularly scheduled full scan will ensure malware missed by the real-time scanning will be detected and mitigated.

To check that VSEL settings are configured correctly, connect to the McAfee VirusScan Enterprise for Linux (VSEL) Monitor (WEB interface) 
of the Linux system being reviewed from a desktop browser window and logon with the nails user account.

In the VSEL WEB Monitor, review tasks under <html:code>View</html:code>, <html:code>Scheduled Tasks</html:code>.
With the System Administrator's assistance, determine which task is intended as the regularly scheduled scan task.

Click on the task and review the details under <html:code>Task Details for</html:code>.

If <html:code>Next run</html:code> does not specify <html:code>every 1 week</html:code>, or more frequently, this is a finding.

To validate without the Web interface, access the Linux system being reviewed, either at the console or by a SSH connection.
At the command line, navigate to <html:code>/var/opt/NAI/LinuxShield/etc</html:code>.
Enter the command <html:code>/opt/NAI/LinuxShield/bin/nails task --list</html:code>.

If the return does not show a task for the LinuxShield On-Demand Scan, this is a finding.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-100</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Anti-virus software is the most commonly used technical control for malware threat mitigation. </xccdf-1.2:rationale>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_exclusions" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must only be configured with exclusions that are documented and approved by the ISSO/ISSM/AO</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">When scanning for malware, excluding specific files will increase the risk of a malware-infected file going undetected. 

To check that VSEL settings are configured correctly, connect to the McAfee VirusScan Enterprise for Linux (VSEL) Monitor (WEB interface) 
of the Linux system being reviewed from a desktop browser window and logon with the nails user account.

In the VSEL WEB Monitor, review tasks under <html:code>View</html:code>, <html:code>Scheduled Tasks</html:code>.
With the System Administrator's assistance, determine which task is intended as the regularly scheduled scan task.
Click on the task, and then click <html:code>Modify</html:code>.
Under <html:code>2. What to Scan</html:code>, click <html:code>Next</html:code>.
Under <html:code>3. Choose Scan Settings</html:code>, <html:code>Paths Excluded From Scanning</html:code>.

If any paths other than the following paths are excluded, and the exclusions have not been documented and approved by the ISSO/ISSM/AO, this is a finding.

<html:code>/var/log</html:code>
<html:code>/_admin/Manage_NSS</html:code>
<html:code>/mnt/system/log</html:code>
<html:code>/media/nss/.*/(\._NETWARE|\._ADMIN)</html:code>
<html:code>/.*\.(vmdk|VMDK|dbl|DBL|ctl|CTL|log|LOG|jar|JAR|war|WAR|dtx|DTX|dbf|DBF|frm|FRM|myd|MYD|myi|MYI|rdo|RDO|arc|ARC)</html:code>
<html:code>/cgroup</html:code>
<html:code>/dev</html:code>
<html:code>/proc</html:code>
<html:code>/selinux</html:code>
<html:code>/sys</html:code></xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-108</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By configuring anti-virus software without any exclusions, the scanner has a higher success rate at detecting and eradicating malware. </xccdf-1.2:rationale>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_extensions" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to include all local drives and their sub-directories</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">When scanning for malware, excluding specific file types will increase the risk of a malware-infected file going undetected. By configuring anti-virus software to scan all file types, the scanner has a higher success rate at detecting and eradicating malware.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains a line with "extensions.mode" with values set to anything other than <html:code>extensions.mode: all</html:code>, 
associated scans may ignore certain file extensions.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-113</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Excluding file types from scans introduces the possibility for infected files to go undetected by the scanner. </xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_extensions" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"

if  ! grep -q extensions.mode "$NAILS_CONFIG_FILE"; then
	sed -i '$a nailsd.profile.ODS_default.filter.extensions.mode: all' "$NAILS_CONFIG_FILE"

else
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
	replace_or_append "$NAILS_CONFIG_FILE" 'extensions.mode' 'all' '' '%s: %s'
fi
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_extensions:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_extensions_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_heuristicAnalysis" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to find unknown program viruses</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Due to the ability of malware to mutate after infection, standard anti-virus signatures may not be able to catch new strains or variants of the malware. 
Typically, these strains and variants will share unique characteristics with others in their virus family.  

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.heuristicAnalysis: true</html:code>,
unknown virus programs will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-102</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">By using a generic signature to detect the shared characteristics, using wildcards where differences lie, the generic signature can detect viruses 
even if they are padded with extra, meaningless code. This method of detection is Heuristic detection.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_heuristicAnalysis" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.heuristicAnalysis' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_heuristicAnalysis:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_heuristicAnalysis_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_macroAnalysis" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to find unknown macro viruses</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Interpreted viruses are executed by an application. Within this subcategory, macro viruses take advantage of the capabilities of 
applications' macro programming language to infect application documents and document templates, while scripting viruses infect 
scripts that are understood by scripting languages processed by services on the OS.  

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.macroAnalysis: true</html:code>,
unknown macro viruses will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-103</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Many attackers use toolkits containing several different types of utilities and scripts that can be used to probe and attack hosts.
Scanning for unknown macro viruses will mitigate zero-day attacks.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_macroAnalysis" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.macroAnalysis' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_macroAnalysis:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_macroAnalysis_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_mime" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to decode MIME encoded files.</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Malware is often packaged within an archive. In addition, archives might have other archives within. 

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.mime: true</html:code>,
potentially unwanted programs will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-112</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Not scanning archive files introduces the risk of infected files being introduced into the environment.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_mime" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.mime' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_mime:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_mime_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_program" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US">The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be configured to find potentially unwanted programs</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">Potentially Unwanted Programs (PUPs) include Spyware, Adware, Remote Administration Tools, Dialers, Password Crackers, Jokes, and Key Loggers. 
While PUPs do not typically have any infection capability on their own, they rely on malware or other attach mechanisms to be installed onto target hosts, 
after which they will collect and transfer data from the host to an external host and/or will be used as attach mechanisms.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.program: true</html:code>,
potentially unwanted programs will be scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001241</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000277</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-104</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Configuring the anti-virus software to attempt to clean the file first will allow for the possibility of a false positive. 
In most cases, however, the secondary action of delete will be used, mitigating the risk of the PUPs being installed and used maliciously.</xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_program" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.program' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_program:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_program_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
          <xccdf-1.2:Rule id="xccdf_org.ssgproject.content_rule_ods_scanNWFiles_local" selected="false" role="full" severity="medium">
            <xccdf-1.2:title xml:lang="en-US"> The McAfee VirusScan Enterprise for Linux 1.9.x/2.0.x On-Demand scanner must be enabled to scan mounted volumes when mounted volumes point to a network server without an anti-virus solution installed</xccdf-1.2:title>
            <xccdf-1.2:description xml:lang="en-US">It is imperative to protect Linux systems from malware introduced from those other network systems by either ensuring the remote systems are protected or by scanning files from those systems when they are accessed.

To check that VSEL settings are configured correctly, you have to examine the config file
available under <html:code>/var/opt/NAI/LinuxShield/etc/ods.cfg</html:code>.
If this config file contains the line <html:code>nailsd.profile.ODS.scanNWFiles: true</html:code>,
files on network mounts are scanned.</xccdf-1.2:description>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/cci/">CCI-001242</xccdf-1.2:reference>
            <xccdf-1.2:reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">SI-3</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000278</xccdf-1.2:reference>
            <xccdf-1.2:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capp-security-dev">DTAVSEL-019</xccdf-1.2:reference>
            <xccdf-1.2:rationale xml:lang="en-US">Mounting network volumes to other network systems introduces a path for malware to be introduced. </xccdf-1.2:rationale>
            <xccdf-1.2:fix id="ods_scanNWFiles_local" system="urn:xccdf:fix:script:sh">


NAILS_CONFIG_FILE="/var/opt/NAI/LinuxShield/etc/ods.cfg"
<xccdf-1.2:sub idref="xccdf_org.ssgproject.content_value_function_replace_or_append" use="legacy"/>
replace_or_append "$NAILS_CONFIG_FILE" '^nailsd.profile.ODS.scanNWFiles' 'true' '' '%s: %s'
</xccdf-1.2:fix>
            <xccdf-1.2:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <xccdf-1.2:check-content-ref name="oval:ssg-ods_scanNWFiles_local:def:1" href="ssg-vsel-oval.xml"/>
            </xccdf-1.2:check>
            <xccdf-1.2:check system="http://scap.nist.gov/schema/ocil/2">
              <xccdf-1.2:check-content-ref name="ocil:ssg-ods_scanNWFiles_local_ocil:questionnaire:1" href="ssg-vsel-ocil.xml"/>
            </xccdf-1.2:check>
          </xccdf-1.2:Rule>
        </xccdf-1.2:Group>
      </xccdf-1.2:Group>
    </xccdf-1.2:Benchmark>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-vsel-cpe-oval.xml" timestamp="2021-07-29T13:17:04">
    <oval-def:oval_definitions xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#unix unix-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#linux linux-definitions-schema.xsd">
      <oval-def:generator>
        <oval:product_name>combine_ovals.py from SCAP Security Guide</oval:product_name>
        <oval:product_version>ssg: [0, 1, 57], python: 3.9.6</oval:product_version>
        <oval:schema_version>5.10</oval:schema_version>
        <oval:timestamp>2021-07-29T13:14:51</oval:timestamp>
      </oval-def:generator>
      <oval-def:definitions>
        <oval-def:definition class="inventory" id="oval:ssg-installed_app_is_vsel:def:1" version="1">
          <oval-def:metadata>
            <oval-def:title>McAfee VirusScan Enterprise for Linux</oval-def:title>
            <oval-def:affected family="unix">
              <oval-def:product>McAfee VirusScan Enterprise for Linux</oval-def:product>
            </oval-def:affected>
            <oval-def:reference ref_id="installed_app_is_vsel" source="CPE"/>
            <oval-def:description>The application installed on the system is McAfee VSEL 1.9 or 2.0.</oval-def:description>
          </oval-def:metadata>
          <oval-def:criteria operator="OR">
            <oval-def:criterion comment="McAfee's VSEL 1.9.x is installed" test_ref="oval:ssg-test_vsel_19:tst:1"/>
            <oval-def:criterion comment="McAfee's VSEL 2.0.x is installed" test_ref="oval:ssg-test_vsel_20:tst:1"/>
          </oval-def:criteria>
        </oval-def:definition>
      </oval-def:definitions>
      <oval-def:tests>
        <linux:rpminfo_test check="all" check_existence="at_least_one_exists" comment="McAfee's VSEL 1.9.x is installed" id="oval:ssg-test_vsel_19:tst:1" version="1">
          <linux:object object_ref="oval:ssg-obj_vsel_19:obj:1"/>
          <linux:state state_ref="oval:ssg-state_vsel_19:ste:1"/>
        </linux:rpminfo_test>
        <linux:rpminfo_test check="all" check_existence="at_least_one_exists" comment="McAfee's VSEL 2.0.x is installed" id="oval:ssg-test_vsel_20:tst:1" version="1">
          <linux:object object_ref="oval:ssg-obj_vsel_20:obj:1"/>
          <linux:state state_ref="oval:ssg-state_vsel_20:ste:1"/>
        </linux:rpminfo_test>
      </oval-def:tests>
      <oval-def:objects>
        <linux:rpminfo_object id="oval:ssg-obj_vsel_19:obj:1" version="1">
          <linux:name operation="pattern match">^McAfeeVSEForLinux$</linux:name>
        </linux:rpminfo_object>
        <linux:rpminfo_object id="oval:ssg-obj_vsel_20:obj:1" version="1">
          <linux:name operation="pattern match">^McAfeeVSEForLinux$</linux:name>
        </linux:rpminfo_object>
      </oval-def:objects>
      <oval-def:states>
        <linux:rpminfo_state id="oval:ssg-state_vsel_19:ste:1" version="1">
          <linux:version operation="pattern match">^1.9.*$</linux:version>
        </linux:rpminfo_state>
        <linux:rpminfo_state id="oval:ssg-state_vsel_20:ste:1" version="1">
          <linux:version operation="pattern match">^2.0.*$</linux:version>
        </linux:rpminfo_state>
      </oval-def:states>
    </oval-def:oval_definitions>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-vsel-cpe-dictionary.xml" timestamp="2021-07-29T13:17:04">
    <cpe-dict:cpe-list xsi:schemaLocation="http://cpe.mitre.org/dictionary/2.0 http://cpe.mitre.org/files/cpe-dictionary_2.1.xsd">
      <cpe-dict:cpe-item name="cpe:/a:mcafee:virusscan_enterprise_for_linux:1.9">
        <cpe-dict:title xml:lang="en-us">McAfee's VirusScan Enterprise for Linux (VSEL) 1.9.x</cpe-dict:title>
        <cpe-dict:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5" href="ssg-vsel-cpe-oval.xml">oval:ssg-installed_app_is_vsel:def:1</cpe-dict:check>
      </cpe-dict:cpe-item>
      <cpe-dict:cpe-item name="cpe:/a:mcafee:virusscan_enterprise_for_linux:2.0">
        <cpe-dict:title xml:lang="en-us">McAfee's VirusScan Enterprise for Linux (VSEL) 2.0.x</cpe-dict:title>
        <cpe-dict:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5" href="ssg-vsel-cpe-oval.xml">oval:ssg-installed_app_is_vsel:def:1</cpe-dict:check>
      </cpe-dict:cpe-item>
    </cpe-dict:cpe-list>
  </ds:component>
</ds:data-stream-collection>
